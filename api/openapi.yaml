openapi: 3.0.3
info:
  contact:
    email: dev@airflow.apache.org
    name: Apache Software Foundation
    url: https://airflow.apache.org
  description: |
    # Overview

    To facilitate management, Apache Airflow supports a range of REST API endpoints across its
    objects.
    This section provides an overview of the API design, methods, and supported use cases.

    Most of the endpoints accept `JSON` as input and return `JSON` responses.
    This means that you must usually add the following headers to your request:
    ```
    Content-type: application/json
    Accept: application/json
    ```

    ## Resources

    The term `resource` refers to a single type of object in the Airflow metadata. An API is broken up by its
    endpoint's corresponding resource.
    The name of a resource is typically plural and expressed in camelCase. Example: `dagRuns`.

    Resource names are used as part of endpoint URLs, as well as in API parameters and responses.

    ## CRUD Operations

    The platform supports **C**reate, **R**ead, **U**pdate, and **D**elete operations on most resources.
    You can review the standards for these operations and their standard parameters below.

    Some endpoints have special behavior as exceptions.

    ### Create

    To create a resource, you typically submit an HTTP `POST` request with the resource's required metadata
    in the request body.
    The response returns a `201 Created` response code upon success with the resource's metadata, including
    its internal `id`, in the response body.

    ### Read

    The HTTP `GET` request can be used to read a resource or to list a number of resources.

    A resource's `id` can be submitted in the request parameters to read a specific resource.
    The response usually returns a `200 OK` response code upon success, with the resource's metadata in
    the response body.

    If a `GET` request does not include a specific resource `id`, it is treated as a list request.
    The response usually returns a `200 OK` response code upon success, with an object containing a list
    of resources' metadata in the response body.

    When reading resources, some common query parameters are usually available. e.g.:
    ```
    v1/connections?limit=25&offset=25
    ```

    |Query Parameter|Type|Description|
    |---------------|----|-----------|
    |limit|integer|Maximum number of objects to fetch. Usually 25 by default|
    |offset|integer|Offset after which to start returning objects. For use with limit query parameter.|

    ### Update

    Updating a resource requires the resource `id`, and is typically done using an HTTP `PATCH` request,
    with the fields to modify in the request body.
    The response usually returns a `200 OK` response code upon success, with information about the modified
    resource in the response body.

    ### Delete

    Deleting a resource requires the resource `id` and is typically executed via an HTTP `DELETE` request.
    The response usually returns a `204 No Content` response code upon success.

    ## Conventions

    - Resource names are plural and expressed in camelCase.
    - Names are consistent between URL parameter name and field name.

    - Field names are in snake_case.
    ```json
    {
        "description": "string",
        "name": "string",
        "occupied_slots": 0,
        "open_slots": 0
        "queued_slots": 0,
        "running_slots": 0,
        "scheduled_slots": 0,
        "slots": 0,
    }
    ```

    ### Update Mask

    Update mask is available as a query parameter in patch endpoints. It is used to notify the
    API which fields you want to update. Using `update_mask` makes it easier to update objects
    by helping the server know which fields to update in an object instead of updating all fields.
    The update request ignores any fields that aren't specified in the field mask, leaving them with
    their current values.

    Example:
    ```
      resource = request.get('/resource/my-id').json()
      resource['my_field'] = 'new-value'
      request.patch('/resource/my-id?update_mask=my_field', data=json.dumps(resource))
    ```

    ## Versioning and Endpoint Lifecycle

    - API versioning is not synchronized to specific releases of the Apache Airflow.
    - APIs are designed to be backward compatible.
    - Any changes to the API will first go through a deprecation phase.

    # Trying the API

    You can use a third party client, such as [curl](https://curl.haxx.se/), [HTTPie](https://httpie.org/),
    [Postman](https://www.postman.com/) or [the Insomnia rest client](https://insomnia.rest/) to test
    the Apache Airflow API.

    Note that you will need to pass credentials data.

    For e.g., here is how to pause a DAG with [curl](https://curl.haxx.se/), when basic authorization is used:
    ```bash
    curl -X PATCH 'https://example.com/api/v1/dags/{dag_id}?update_mask=is_paused' \
    -H 'Content-Type: application/json' \
    --user "username:password" \
    -d '{
        "is_paused": true
    }'
    ```

    Using a graphical tool such as [Postman](https://www.postman.com/) or [Insomnia](https://insomnia.rest/),
    it is possible to import the API specifications directly:

    1. Download the API specification by clicking the **Download** button at the top of this document
    2. Import the JSON specification in the graphical tool of your choice.
      - In *Postman*, you can click the **import** button at the top
      - With *Insomnia*, you can just drag-and-drop the file on the UI

    Note that with *Postman*, you can also generate code snippets by selecting a request and clicking on
    the **Code** button.

    ## Enabling CORS

    [Cross-origin resource sharing (CORS)](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS)
    is a browser security feature that restricts HTTP requests that are
    initiated from scripts running in the browser.

    For details on enabling/configuring CORS, see
    [Enabling CORS](https://airflow.apache.org/docs/apache-airflow/stable/security/api.html).

    # Authentication

    To be able to meet the requirements of many organizations, Airflow supports many authentication methods,
    and it is even possible to add your own method.

    If you want to check which auth backend is currently set, you can use
    `airflow config get-value api auth_backends` command as in the example below.
    ```bash
    $ airflow config get-value api auth_backends
    airflow.api.auth.backend.basic_auth
    ```
    The default is to deny all requests.

    For details on configuring the authentication, see
    [API Authorization](https://airflow.apache.org/docs/apache-airflow/stable/security/api.html).

    # Errors

    We follow the error response format proposed in [RFC 7807](https://tools.ietf.org/html/rfc7807)
    also known as Problem Details for HTTP APIs. As with our normal API responses,
    your client must be prepared to gracefully handle additional members of the response.

    ## Unauthenticated

    This indicates that the request has not been applied because it lacks valid authentication
    credentials for the target resource. Please check that you have valid credentials.

    ## PermissionDenied

    This response means that the server understood the request but refuses to authorize
    it because it lacks sufficient rights to the resource. It happens when you do not have the
    necessary permission to execute the action you performed. You need to get the appropriate
    permissions in other to resolve this error.

    ## BadRequest

    This response means that the server cannot or will not process the request due to something
    that is perceived to be a client error (e.g., malformed request syntax, invalid request message
    framing, or deceptive request routing). To resolve this, please ensure that your syntax is correct.

    ## NotFound

    This client error response indicates that the server cannot find the requested resource.

    ## MethodNotAllowed

    Indicates that the request method is known by the server but is not supported by the target resource.

    ## NotAcceptable

    The target resource does not have a current representation that would be acceptable to the user
    agent, according to the proactive negotiation header fields received in the request, and the
    server is unwilling to supply a default representation.

    ## AlreadyExists

    The request could not be completed due to a conflict with the current state of the target
    resource, e.g. the resource it tries to create already exists.

    ## Unknown

    This means that the server encountered an unexpected condition that prevented it from
    fulfilling the request.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Airflow API (Stable)
  version: 2.10.5
externalDocs:
  url: https://airflow.apache.org/docs/apache-airflow/stable/
servers:
- description: Apache Airflow Stable API.
  url: /api/v1
tags:
- name: Config
- name: Connection
- name: DAG
- name: DAGRun
- name: DagWarning
- name: Dataset
- name: EventLog
- name: ImportError
- name: Monitoring
- name: Permission
- name: Plugin
- name: Pool
- name: Provider
- name: Role
- name: TaskInstance
- name: User
- name: Variable
- name: XCom
paths:
  /connections:
    get:
      operationId: get_connections
      parameters:
      - description: The numbers of items to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          type: integer
        style: form
      - description: The number of items to skip before starting to collect the result
          set.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: |
          The name of the field to order the results by.
          Prefix a field name with `-` to reverse the sort order.

          *New in version 2.1.0*
        explode: true
        in: query
        name: order_by
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectionCollection"
          description: Success.
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
      summary: List connections
      tags:
      - Connection
      x-openapi-router-controller: airflow.api_connexion.endpoints.connection_endpoint
      x-accepts:
      - application/json
    post:
      operationId: post_connection
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Connection"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Connection"
          description: Success.
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
      summary: Create a connection
      tags:
      - Connection
      x-openapi-router-controller: airflow.api_connexion.endpoints.connection_endpoint
      x-content-type: application/json
      x-accepts:
      - application/json
  /connections/{connection_id}:
    delete:
      operationId: delete_connection
      parameters:
      - description: The connection ID.
        explode: false
        in: path
        name: connection_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success.
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Delete a connection
      tags:
      - Connection
      x-openapi-router-controller: airflow.api_connexion.endpoints.connection_endpoint
      x-accepts:
      - application/json
    get:
      operationId: get_connection
      parameters:
      - description: The connection ID.
        explode: false
        in: path
        name: connection_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Connection"
          description: Success.
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Get a connection
      tags:
      - Connection
      x-openapi-router-controller: airflow.api_connexion.endpoints.connection_endpoint
      x-accepts:
      - application/json
    patch:
      operationId: patch_connection
      parameters:
      - description: The connection ID.
        explode: false
        in: path
        name: connection_id
        required: true
        schema:
          type: string
        style: simple
      - description: |
          The fields to update on the resource. If absent or empty, all modifiable fields are updated.
          A comma-separated list of fully qualified names of fields.
        explode: false
        in: query
        name: update_mask
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Connection"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Connection"
          description: Success.
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Update a connection
      tags:
      - Connection
      x-openapi-router-controller: airflow.api_connexion.endpoints.connection_endpoint
      x-content-type: application/json
      x-accepts:
      - application/json
  /connections/test:
    post:
      description: |
        Test a connection.

        For security reasons, the test connection functionality is disabled by default across Airflow UI, API and CLI.
        For more information on capabilities of users, see the documentation:
        https://airflow.apache.org/docs/apache-airflow/stable/security/security_model.html#capabilities-of-authenticated-ui-users.
        It is strongly advised to not enable the feature until you make sure that only
        highly trusted UI/API users have "edit connection" permissions.

        Set the "test_connection" flag to "Enabled" in the "core" section of Airflow configuration (airflow.cfg) to enable testing of collections.
        It can also be controlled by the environment variable `AIRFLOW__CORE__TEST_CONNECTION`.

        *New in version 2.2.0*
      operationId: test_connection
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Connection"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConnectionTest"
          description: Success.
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Test a connection
      tags:
      - Connection
      x-openapi-router-controller: airflow.api_connexion.endpoints.connection_endpoint
      x-content-type: application/json
      x-accepts:
      - application/json
  /dags:
    get:
      description: |
        List DAGs in the database.
        `dag_id_pattern` can be set to match dags of a specific pattern
      operationId: get_dags
      parameters:
      - description: The numbers of items to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          type: integer
        style: form
      - description: The number of items to skip before starting to collect the result
          set.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: |
          The name of the field to order the results by.
          Prefix a field name with `-` to reverse the sort order.

          *New in version 2.1.0*
        explode: true
        in: query
        name: order_by
        required: false
        schema:
          type: string
        style: form
      - description: |
          List of tags to filter results.

          *New in version 2.2.0*
        explode: true
        in: query
        name: tags
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |
          Only filter active DAGs.

          *New in version 2.1.1*
        explode: true
        in: query
        name: only_active
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: |
          Only filter paused/unpaused DAGs. If absent or null, it returns paused and unpaused DAGs.

          *New in version 2.6.0*
        explode: true
        in: query
        name: paused
        required: false
        schema:
          type: boolean
        style: form
      - description: |
          List of field for return.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |
          If set, only return DAGs with dag_ids matching this pattern.
        explode: true
        in: query
        name: dag_id_pattern
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DAGCollection"
          description: Success.
        "401":
          $ref: "#/components/responses/Unauthenticated"
      summary: List DAGs
      tags:
      - DAG
      x-openapi-router-controller: airflow.api_connexion.endpoints.dag_endpoint
      x-accepts:
      - application/json
    patch:
      description: |
        Update DAGs of a given dag_id_pattern using UpdateMask.
        This endpoint allows specifying `~` as the dag_id_pattern to update all DAGs.
        *New in version 2.3.0*
      operationId: patch_dags
      parameters:
      - description: The numbers of items to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          type: integer
        style: form
      - description: The number of items to skip before starting to collect the result
          set.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: |
          List of tags to filter results.

          *New in version 2.2.0*
        explode: true
        in: query
        name: tags
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |
          The fields to update on the resource. If absent or empty, all modifiable fields are updated.
          A comma-separated list of fully qualified names of fields.
        explode: false
        in: query
        name: update_mask
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |
          Only filter active DAGs.

          *New in version 2.1.1*
        explode: true
        in: query
        name: only_active
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: |
          If set, only update DAGs with dag_ids matching this pattern.
        explode: true
        in: query
        name: dag_id_pattern
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            example:
              is_paused: true
            schema:
              $ref: "#/components/schemas/DAG"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DAGCollection"
          description: Success.
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Update DAGs
      tags:
      - DAG
      x-openapi-router-controller: airflow.api_connexion.endpoints.dag_endpoint
      x-content-type: application/json
      x-accepts:
      - application/json
  /dags/{dag_id}:
    delete:
      description: |
        Deletes all metadata related to the DAG, including finished DAG Runs and Tasks.
        Logs are not deleted. This action cannot be undone.

        *New in version 2.2.0*
      operationId: delete_dag
      parameters:
      - description: The DAG ID.
        explode: false
        in: path
        name: dag_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success.
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/AlreadyExists"
      summary: Delete a DAG
      tags:
      - DAG
      x-openapi-router-controller: airflow.api_connexion.endpoints.dag_endpoint
      x-accepts:
      - application/json
    get:
      description: |
        Presents only information available in database (DAGModel).
        If you need detailed information, consider using GET /dags/{dag_id}/details.
      operationId: get_dag
      parameters:
      - description: The DAG ID.
        explode: false
        in: path
        name: dag_id
        required: true
        schema:
          type: string
        style: simple
      - description: |
          List of field for return.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DAG"
          description: Success.
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Get basic information about a DAG
      tags:
      - DAG
      x-openapi-router-controller: airflow.api_connexion.endpoints.dag_endpoint
      x-accepts:
      - application/json
    patch:
      operationId: patch_dag
      parameters:
      - description: The DAG ID.
        explode: false
        in: path
        name: dag_id
        required: true
        schema:
          type: string
        style: simple
      - description: |
          The fields to update on the resource. If absent or empty, all modifiable fields are updated.
          A comma-separated list of fully qualified names of fields.
        explode: false
        in: query
        name: update_mask
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            example:
              is_paused: true
            schema:
              $ref: "#/components/schemas/DAG"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DAG"
          description: Success.
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Update a DAG
      tags:
      - DAG
      x-openapi-router-controller: airflow.api_connexion.endpoints.dag_endpoint
      x-content-type: application/json
      x-accepts:
      - application/json
  /dags/{dag_id}/clearTaskInstances:
    post:
      description: |
        Clears a set of task instances associated with the DAG for a specified date range.
      operationId: post_clear_task_instances
      parameters:
      - description: The DAG ID.
        explode: false
        in: path
        name: dag_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClearTaskInstances"
        description: Parameters of action
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskInstanceReferenceCollection"
          description: Success.
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Clear a set of task instances
      tags:
      - DAG
      x-openapi-router-controller: airflow.api_connexion.endpoints.task_instance_endpoint
      x-content-type: application/json
      x-accepts:
      - application/json
  /dags/{dag_id}/dagRuns/{dag_run_id}/taskInstances/{task_id}/setNote:
    patch:
      description: |
        Update the manual user note of a non-mapped Task Instance.

        *New in version 2.5.0*
      operationId: set_task_instance_note
      parameters:
      - description: The DAG ID.
        explode: false
        in: path
        name: dag_id
        required: true
        schema:
          type: string
        style: simple
      - description: The DAG run ID.
        explode: false
        in: path
        name: dag_run_id
        required: true
        schema:
          type: string
        style: simple
      - description: The task ID.
        explode: false
        in: path
        name: task_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetTaskInstanceNote"
        description: Parameters of set Task Instance note.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskInstance"
          description: Success.
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Update the TaskInstance note.
      tags:
      - TaskInstance
      x-openapi-router-controller: airflow.api_connexion.endpoints.task_instance_endpoint
      x-content-type: application/json
      x-accepts:
      - application/json
  /dags/{dag_id}/dagRuns/{dag_run_id}/taskInstances/{task_id}/{map_index}/setNote:
    patch:
      description: |
        Update the manual user note of a mapped Task Instance.

        *New in version 2.5.0*
      operationId: set_mapped_task_instance_note
      parameters:
      - description: The DAG ID.
        explode: false
        in: path
        name: dag_id
        required: true
        schema:
          type: string
        style: simple
      - description: The DAG run ID.
        explode: false
        in: path
        name: dag_run_id
        required: true
        schema:
          type: string
        style: simple
      - description: The task ID.
        explode: false
        in: path
        name: task_id
        required: true
        schema:
          type: string
        style: simple
      - description: The map index.
        explode: false
        in: path
        name: map_index
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetTaskInstanceNote"
        description: Parameters of set Task Instance note.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskInstance"
          description: Success.
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Update the TaskInstance note.
      tags:
      - TaskInstance
      x-openapi-router-controller: airflow.api_connexion.endpoints.task_instance_endpoint
      x-content-type: application/json
      x-accepts:
      - application/json
  /dags/{dag_id}/dagRuns/{dag_run_id}/taskInstances/{task_id}/dependencies:
    get:
      description: |
        Get task dependencies blocking task from getting scheduled.

        *New in version 2.10.0*
      operationId: get_task_instance_dependencies
      parameters:
      - description: The DAG ID.
        explode: false
        in: path
        name: dag_id
        required: true
        schema:
          type: string
        style: simple
      - description: The DAG run ID.
        explode: false
        in: path
        name: dag_run_id
        required: true
        schema:
          type: string
        style: simple
      - description: The task ID.
        explode: false
        in: path
        name: task_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskInstanceDependencyCollection"
          description: Success.
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Get task dependencies blocking task from getting scheduled.
      tags:
      - TaskInstance
      x-openapi-router-controller: airflow.api_connexion.endpoints.task_instance_endpoint
      x-accepts:
      - application/json
  /dags/{dag_id}/dagRuns/{dag_run_id}/taskInstances/{task_id}/{map_index}/dependencies:
    get:
      description: |
        Get task dependencies blocking task from getting scheduled.

        *New in version 2.10.0*
      operationId: get_mapped_task_instance_dependencies
      parameters:
      - description: The DAG ID.
        explode: false
        in: path
        name: dag_id
        required: true
        schema:
          type: string
        style: simple
      - description: The DAG run ID.
        explode: false
        in: path
        name: dag_run_id
        required: true
        schema:
          type: string
        style: simple
      - description: The task ID.
        explode: false
        in: path
        name: task_id
        required: true
        schema:
          type: string
        style: simple
      - description: The map index.
        explode: false
        in: path
        name: map_index
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskInstanceDependencyCollection"
          description: Success.
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Get task dependencies blocking task from getting scheduled.
      tags:
      - TaskInstance
      x-openapi-router-controller: airflow.api_connexion.endpoints.task_instance_endpoint
      x-accepts:
      - application/json
  /dags/{dag_id}/updateTaskInstancesState:
    post:
      description: |
        Updates the state for multiple task instances simultaneously.
      operationId: post_set_task_instances_state
      parameters:
      - description: The DAG ID.
        explode: false
        in: path
        name: dag_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTaskInstancesState"
        description: Parameters of action
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskInstanceReferenceCollection"
          description: Success.
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Set a state of task instances
      tags:
      - DAG
      x-openapi-router-controller: airflow.api_connexion.endpoints.task_instance_endpoint
      x-content-type: application/json
      x-accepts:
      - application/json
  /dags/{dag_id}/dagRuns:
    get:
      description: |
        This endpoint allows specifying `~` as the dag_id to retrieve DAG runs for all DAGs.
      operationId: get_dag_runs
      parameters:
      - description: The DAG ID.
        explode: false
        in: path
        name: dag_id
        required: true
        schema:
          type: string
        style: simple
      - description: The numbers of items to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          type: integer
        style: form
      - description: The number of items to skip before starting to collect the result
          set.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: |
          Returns objects greater or equal to the specified date.

          This can be combined with execution_date_lte parameter to receive only the selected period.
        explode: true
        in: query
        name: execution_date_gte
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |
          Returns objects less than or equal to the specified date.

          This can be combined with execution_date_gte parameter to receive only the selected period.
        explode: true
        in: query
        name: execution_date_lte
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |
          Returns objects greater or equal the specified date.

          This can be combined with start_date_lte parameter to receive only the selected period.
        explode: true
        in: query
        name: start_date_gte
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |
          Returns objects less or equal the specified date.

          This can be combined with start_date_gte parameter to receive only the selected period.
        explode: true
        in: query
        name: start_date_lte
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |
          Returns objects greater or equal the specified date.

          This can be combined with start_date_lte parameter to receive only the selected period.
        explode: true
        in: query
        name: end_date_gte
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |
          Returns objects less than or equal to the specified date.

          This can be combined with start_date_gte parameter to receive only the selected period.
        explode: true
        in: query
        name: end_date_lte
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |
          Returns objects greater or equal the specified date.

          This can be combined with updated_at_lte parameter to receive only the selected period.

          *New in version 2.6.0*
        explode: true
        in: query
        name: updated_at_gte
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |
          Returns objects less or equal the specified date.

          This can be combined with updated_at_gte parameter to receive only the selected period.

          *New in version 2.6.0*
        explode: true
        in: query
        name: updated_at_lte
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: The value can be repeated to retrieve multiple matching values
          (OR condition).
        explode: true
        in: query
        name: state
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |
          The name of the field to order the results by.
          Prefix a field name with `-` to reverse the sort order.

          *New in version 2.1.0*
        explode: true
        in: query
        name: order_by
        required: false
        schema:
          type: string
        style: form
      - description: |
          List of field for return.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DAGRunCollection"
          description: List of DAG runs.
        "401":
          $ref: "#/components/responses/Unauthenticated"
      summary: List DAG runs
      tags:
      - DAGRun
      x-openapi-router-controller: airflow.api_connexion.endpoints.dag_run_endpoint
      x-accepts:
      - application/json
    post:
      description: |
        This will initiate a dagrun. If DAG is paused then dagrun state will remain queued, and the task won't run.
      operationId: post_dag_run
      parameters:
      - description: The DAG ID.
        explode: false
        in: path
        name: dag_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DAGRun"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DAGRun"
          description: Success.
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "409":
          $ref: "#/components/responses/AlreadyExists"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Trigger a new DAG run.
      tags:
      - DAGRun
      x-openapi-router-controller: airflow.api_connexion.endpoints.dag_run_endpoint
      x-content-type: application/json
      x-accepts:
      - application/json
  /dags/~/dagRuns/list:
    post:
      description: |
        This endpoint is a POST to allow filtering across a large number of DAG IDs, where as a GET it would run in to maximum HTTP request URL length limit.
      operationId: get_dag_runs_batch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListDagRunsForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DAGRunCollection"
          description: Success.
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
      summary: List DAG runs (batch)
      tags:
      - DAGRun
      x-openapi-router-controller: airflow.api_connexion.endpoints.dag_run_endpoint
      x-content-type: application/json
      x-accepts:
      - application/json
  /dags/{dag_id}/dagRuns/{dag_run_id}:
    delete:
      operationId: delete_dag_run
      parameters:
      - description: The DAG ID.
        explode: false
        in: path
        name: dag_id
        required: true
        schema:
          type: string
        style: simple
      - description: The DAG run ID.
        explode: false
        in: path
        name: dag_run_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success.
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Delete a DAG run
      tags:
      - DAGRun
      x-openapi-router-controller: airflow.api_connexion.endpoints.dag_run_endpoint
      x-accepts:
      - application/json
    get:
      operationId: get_dag_run
      parameters:
      - description: The DAG ID.
        explode: false
        in: path
        name: dag_id
        required: true
        schema:
          type: string
        style: simple
      - description: The DAG run ID.
        explode: false
        in: path
        name: dag_run_id
        required: true
        schema:
          type: string
        style: simple
      - description: |
          List of field for return.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DAGRun"
          description: Success.
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Get a DAG run
      tags:
      - DAGRun
      x-openapi-router-controller: airflow.api_connexion.endpoints.dag_run_endpoint
      x-accepts:
      - application/json
    patch:
      description: |
        Modify a DAG run.

        *New in version 2.2.0*
      operationId: update_dag_run_state
      parameters:
      - description: The DAG ID.
        explode: false
        in: path
        name: dag_id
        required: true
        schema:
          type: string
        style: simple
      - description: The DAG run ID.
        explode: false
        in: path
        name: dag_run_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateDagRunState"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DAGRun"
          description: Success.
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Modify a DAG run
      tags:
      - DAGRun
      x-openapi-router-controller: airflow.api_connexion.endpoints.dag_run_endpoint
      x-content-type: application/json
      x-accepts:
      - application/json
  /dags/{dag_id}/dagRuns/{dag_run_id}/clear:
    post:
      description: |
        Clear a DAG run.

        *New in version 2.4.0*
      operationId: clear_dag_run
      parameters:
      - description: The DAG ID.
        explode: false
        in: path
        name: dag_id
        required: true
        schema:
          type: string
        style: simple
      - description: The DAG run ID.
        explode: false
        in: path
        name: dag_run_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClearDagRun"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/clear_dag_run_200_response"
          description: Success.
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Clear a DAG run
      tags:
      - DAGRun
      x-openapi-router-controller: airflow.api_connexion.endpoints.dag_run_endpoint
      x-content-type: application/json
      x-accepts:
      - application/json
  /dags/{dag_id}/dagRuns/{dag_run_id}/upstreamDatasetEvents:
    get:
      description: |
        Get datasets for a dag run.

        *New in version 2.4.0*
      operationId: get_upstream_dataset_events
      parameters:
      - description: The DAG ID.
        explode: false
        in: path
        name: dag_id
        required: true
        schema:
          type: string
        style: simple
      - description: The DAG run ID.
        explode: false
        in: path
        name: dag_run_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatasetEventCollection"
          description: Success.
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Get dataset events for a DAG run
      tags:
      - DAGRun
      - Dataset
      x-openapi-router-controller: airflow.api_connexion.endpoints.dag_run_endpoint
      x-accepts:
      - application/json
  /dags/{dag_id}/dagRuns/{dag_run_id}/setNote:
    patch:
      description: |
        Update the manual user note of a DagRun.

        *New in version 2.5.0*
      operationId: set_dag_run_note
      parameters:
      - description: The DAG ID.
        explode: false
        in: path
        name: dag_id
        required: true
        schema:
          type: string
        style: simple
      - description: The DAG run ID.
        explode: false
        in: path
        name: dag_run_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetDagRunNote"
        description: Parameters of set DagRun note.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DAGRun"
          description: Success.
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Update the DagRun note.
      tags:
      - DAGRun
      x-openapi-router-controller: airflow.api_connexion.endpoints.dag_run_endpoint
      x-content-type: application/json
      x-accepts:
      - application/json
  /dags/{dag_id}/datasets/queuedEvent/{uri}:
    delete:
      description: |
        Delete a queued Dataset event for a DAG.

        *New in version 2.9.0*
      operationId: delete_dag_dataset_queued_event
      parameters:
      - description: The DAG ID.
        explode: false
        in: path
        name: dag_id
        required: true
        schema:
          type: string
        style: simple
      - description: The encoded Dataset URI
        explode: false
        in: path
        name: uri
        required: true
        schema:
          format: path
          type: string
        style: simple
      - description: Timestamp to select event logs occurring before.
        explode: true
        in: query
        name: before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "204":
          description: Success.
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Delete a queued Dataset event for a DAG.
      tags:
      - Dataset
      x-openapi-router-controller: airflow.api_connexion.endpoints.dataset_endpoint
      x-accepts:
      - application/json
    get:
      description: |
        Get a queued Dataset event for a DAG.

        *New in version 2.9.0*
      operationId: get_dag_dataset_queued_event
      parameters:
      - description: The DAG ID.
        explode: false
        in: path
        name: dag_id
        required: true
        schema:
          type: string
        style: simple
      - description: The encoded Dataset URI
        explode: false
        in: path
        name: uri
        required: true
        schema:
          format: path
          type: string
        style: simple
      - description: Timestamp to select event logs occurring before.
        explode: true
        in: query
        name: before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QueuedEvent"
          description: Success.
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Get a queued Dataset event for a DAG
      tags:
      - Dataset
      x-openapi-router-controller: airflow.api_connexion.endpoints.dataset_endpoint
      x-accepts:
      - application/json
  /dags/{dag_id}/datasets/queuedEvent:
    delete:
      description: |
        Delete queued Dataset events for a DAG.

        *New in version 2.9.0*
      operationId: delete_dag_dataset_queued_events
      parameters:
      - description: The DAG ID.
        explode: false
        in: path
        name: dag_id
        required: true
        schema:
          type: string
        style: simple
      - description: Timestamp to select event logs occurring before.
        explode: true
        in: query
        name: before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "204":
          description: Success.
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Delete queued Dataset events for a DAG.
      tags:
      - Dataset
      x-openapi-router-controller: airflow.api_connexion.endpoints.dataset_endpoint
      x-accepts:
      - application/json
    get:
      description: |
        Get queued Dataset events for a DAG.

        *New in version 2.9.0*
      operationId: get_dag_dataset_queued_events
      parameters:
      - description: The DAG ID.
        explode: false
        in: path
        name: dag_id
        required: true
        schema:
          type: string
        style: simple
      - description: Timestamp to select event logs occurring before.
        explode: true
        in: query
        name: before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QueuedEventCollection"
          description: Success.
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Get queued Dataset events for a DAG.
      tags:
      - Dataset
      x-openapi-router-controller: airflow.api_connexion.endpoints.dataset_endpoint
      x-accepts:
      - application/json
  /parseDagFile/{file_token}:
    put:
      description: |
        Request re-parsing of existing DAG files using a file token.
      operationId: reparse_dag_file
      parameters:
      - description: |
          The key containing the encrypted path to the file. Encryption and decryption take place only on
          the server. This prevents the client from reading an non-DAG file. This also ensures API
          extensibility, because the format of encrypted data may change.
        explode: false
        in: path
        name: file_token
        required: true
        schema:
          type: string
        style: simple
      responses:
        "201":
          description: Success.
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Request re-parsing of a DAG file
      tags:
      - DAG
      x-openapi-router-controller: airflow.api_connexion.endpoints.dag_parsing
      x-accepts:
      - application/json
  /datasets/queuedEvent/{uri}:
    delete:
      description: |
        Delete queued Dataset events for a Dataset.

        *New in version 2.9.0*
      operationId: delete_dataset_queued_events
      parameters:
      - description: The encoded Dataset URI
        explode: false
        in: path
        name: uri
        required: true
        schema:
          format: path
          type: string
        style: simple
      - description: Timestamp to select event logs occurring before.
        explode: true
        in: query
        name: before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "204":
          description: Success.
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Delete queued Dataset events for a Dataset.
      tags:
      - Dataset
      x-openapi-router-controller: airflow.api_connexion.endpoints.dataset_endpoint
      x-accepts:
      - application/json
    get:
      description: |
        Get queued Dataset events for a Dataset

        *New in version 2.9.0*
      operationId: get_dataset_queued_events
      parameters:
      - description: The encoded Dataset URI
        explode: false
        in: path
        name: uri
        required: true
        schema:
          format: path
          type: string
        style: simple
      - description: Timestamp to select event logs occurring before.
        explode: true
        in: query
        name: before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QueuedEventCollection"
          description: Success.
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Get queued Dataset events for a Dataset.
      tags:
      - Dataset
      x-openapi-router-controller: airflow.api_connexion.endpoints.dataset_endpoint
      x-accepts:
      - application/json
  /eventLogs:
    get:
      description: List log entries from event log.
      operationId: get_event_logs
      parameters:
      - description: The numbers of items to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          type: integer
        style: form
      - description: The number of items to skip before starting to collect the result
          set.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: |
          The name of the field to order the results by.
          Prefix a field name with `-` to reverse the sort order.

          *New in version 2.1.0*
        explode: true
        in: query
        name: order_by
        required: false
        schema:
          type: string
        style: form
      - description: Returns objects matched by the DAG ID.
        explode: true
        in: query
        name: dag_id
        required: false
        schema:
          type: string
        style: form
      - description: Returns objects matched by the Task ID.
        explode: true
        in: query
        name: task_id
        required: false
        schema:
          type: string
        style: form
      - description: Returns objects matched by the Run ID.
        explode: true
        in: query
        name: run_id
        required: false
        schema:
          type: string
        style: form
      - description: Filter on map index for mapped task.
        explode: true
        in: query
        name: map_index
        required: false
        schema:
          type: integer
        style: form
      - description: Filter on try_number for task instance.
        explode: true
        in: query
        name: try_number
        required: false
        schema:
          type: integer
        style: form
      - description: The name of event log.
        explode: true
        in: query
        name: event
        required: false
        schema:
          type: string
        style: form
      - description: The owner's name of event log.
        explode: true
        in: query
        name: owner
        required: false
        schema:
          type: string
        style: form
      - description: Timestamp to select event logs occurring before.
        explode: true
        in: query
        name: before
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Timestamp to select event logs occurring after.
        explode: true
        in: query
        name: after
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |
          One or more event names separated by commas. If set, only return event logs with events matching this pattern.
          *New in version 2.9.0*
        explode: true
        in: query
        name: included_events
        required: false
        schema:
          type: string
        style: form
      - description: |
          One or more event names separated by commas. If set, only return event logs with events that do not match this pattern.
          *New in version 2.9.0*
        explode: true
        in: query
        name: excluded_events
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventLogCollection"
          description: Success.
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
      summary: List log entries
      tags:
      - EventLog
      x-openapi-router-controller: airflow.api_connexion.endpoints.event_log_endpoint
      x-accepts:
      - application/json
  /eventLogs/{event_log_id}:
    get:
      operationId: get_event_log
      parameters:
      - description: The event log ID.
        explode: false
        in: path
        name: event_log_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventLog"
          description: Success.
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Get a log entry
      tags:
      - EventLog
      x-openapi-router-controller: airflow.api_connexion.endpoints.event_log_endpoint
      x-accepts:
      - application/json
  /importErrors:
    get:
      operationId: get_import_errors
      parameters:
      - description: The numbers of items to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          type: integer
        style: form
      - description: The number of items to skip before starting to collect the result
          set.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: |
          The name of the field to order the results by.
          Prefix a field name with `-` to reverse the sort order.

          *New in version 2.1.0*
        explode: true
        in: query
        name: order_by
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImportErrorCollection"
          description: Success.
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
      summary: List import errors
      tags:
      - ImportError
      x-openapi-router-controller: airflow.api_connexion.endpoints.import_error_endpoint
      x-accepts:
      - application/json
  /importErrors/{import_error_id}:
    get:
      operationId: get_import_error
      parameters:
      - description: The import error ID.
        explode: false
        in: path
        name: import_error_id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImportError"
          description: Success.
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Get an import error
      tags:
      - ImportError
      x-openapi-router-controller: airflow.api_connexion.endpoints.import_error_endpoint
      x-accepts:
      - application/json
  /pools:
    get:
      operationId: get_pools
      parameters:
      - description: The numbers of items to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          type: integer
        style: form
      - description: The number of items to skip before starting to collect the result
          set.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: |
          The name of the field to order the results by.
          Prefix a field name with `-` to reverse the sort order.

          *New in version 2.1.0*
        explode: true
        in: query
        name: order_by
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PoolCollection"
          description: List of pools.
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
      summary: List pools
      tags:
      - Pool
      x-openapi-router-controller: airflow.api_connexion.endpoints.pool_endpoint
      x-accepts:
      - application/json
    post:
      operationId: post_pool
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pool"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pool"
          description: Success.
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
      summary: Create a pool
      tags:
      - Pool
      x-openapi-router-controller: airflow.api_connexion.endpoints.pool_endpoint
      x-content-type: application/json
      x-accepts:
      - application/json
  /pools/{pool_name}:
    delete:
      operationId: delete_pool
      parameters:
      - description: The pool name.
        explode: false
        in: path
        name: pool_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success.
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Delete a pool
      tags:
      - Pool
      x-openapi-router-controller: airflow.api_connexion.endpoints.pool_endpoint
      x-accepts:
      - application/json
    get:
      operationId: get_pool
      parameters:
      - description: The pool name.
        explode: false
        in: path
        name: pool_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pool"
          description: Success.
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Get a pool
      tags:
      - Pool
      x-openapi-router-controller: airflow.api_connexion.endpoints.pool_endpoint
      x-accepts:
      - application/json
    patch:
      operationId: patch_pool
      parameters:
      - description: The pool name.
        explode: false
        in: path
        name: pool_name
        required: true
        schema:
          type: string
        style: simple
      - description: |
          The fields to update on the resource. If absent or empty, all modifiable fields are updated.
          A comma-separated list of fully qualified names of fields.
        explode: false
        in: query
        name: update_mask
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pool"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pool"
          description: Success.
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/AlreadyExists"
      summary: Update a pool
      tags:
      - Pool
      x-openapi-router-controller: airflow.api_connexion.endpoints.pool_endpoint
      x-content-type: application/json
      x-accepts:
      - application/json
  /providers:
    get:
      description: |
        Get a list of providers.

        *New in version 2.1.0*
      operationId: get_providers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/get_providers_200_response"
          description: List of providers.
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
      summary: List providers
      tags:
      - Provider
      x-openapi-router-controller: airflow.api_connexion.endpoints.provider_endpoint
      x-accepts:
      - application/json
  /dags/{dag_id}/dagRuns/{dag_run_id}/taskInstances:
    get:
      description: |
        This endpoint allows specifying `~` as the dag_id, dag_run_id to retrieve DAG runs for all DAGs and DAG runs.
      operationId: get_task_instances
      parameters:
      - description: The DAG ID.
        explode: false
        in: path
        name: dag_id
        required: true
        schema:
          type: string
        style: simple
      - description: The DAG run ID.
        explode: false
        in: path
        name: dag_run_id
        required: true
        schema:
          type: string
        style: simple
      - description: |
          Returns objects greater or equal to the specified date.

          This can be combined with execution_date_lte parameter to receive only the selected period.
        explode: true
        in: query
        name: execution_date_gte
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |
          Returns objects less than or equal to the specified date.

          This can be combined with execution_date_gte parameter to receive only the selected period.
        explode: true
        in: query
        name: execution_date_lte
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |
          Returns objects greater or equal the specified date.

          This can be combined with start_date_lte parameter to receive only the selected period.
        explode: true
        in: query
        name: start_date_gte
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |
          Returns objects less or equal the specified date.

          This can be combined with start_date_gte parameter to receive only the selected period.
        explode: true
        in: query
        name: start_date_lte
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |
          Returns objects greater or equal the specified date.

          This can be combined with start_date_lte parameter to receive only the selected period.
        explode: true
        in: query
        name: end_date_gte
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |
          Returns objects less than or equal to the specified date.

          This can be combined with start_date_gte parameter to receive only the selected period.
        explode: true
        in: query
        name: end_date_lte
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |
          Returns objects greater or equal the specified date.

          This can be combined with updated_at_lte parameter to receive only the selected period.

          *New in version 2.6.0*
        explode: true
        in: query
        name: updated_at_gte
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |
          Returns objects less or equal the specified date.

          This can be combined with updated_at_gte parameter to receive only the selected period.

          *New in version 2.6.0*
        explode: true
        in: query
        name: updated_at_lte
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |
          Returns objects greater than or equal to the specified values.

          This can be combined with duration_lte parameter to receive only the selected period.
        explode: true
        in: query
        name: duration_gte
        required: false
        schema:
          type: number
        style: form
      - description: |
          Returns objects less than or equal to the specified values.

          This can be combined with duration_gte parameter to receive only the selected range.
        explode: true
        in: query
        name: duration_lte
        required: false
        schema:
          type: number
        style: form
      - description: The value can be repeated to retrieve multiple matching values
          (OR condition).
        explode: true
        in: query
        name: state
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The value can be repeated to retrieve multiple matching values
          (OR condition).
        explode: true
        in: query
        name: pool
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The value can be repeated to retrieve multiple matching values
          (OR condition).
        explode: true
        in: query
        name: queue
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The value can be repeated to retrieve multiple matching values
          (OR condition).
        explode: true
        in: query
        name: executor
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The numbers of items to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          type: integer
        style: form
      - description: The number of items to skip before starting to collect the result
          set.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskInstanceCollection"
          description: Success.
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
      summary: List task instances
      tags:
      - TaskInstance
      x-openapi-router-controller: airflow.api_connexion.endpoints.task_instance_endpoint
      x-accepts:
      - application/json
  /dags/{dag_id}/dagRuns/{dag_run_id}/taskInstances/{task_id}:
    get:
      operationId: get_task_instance
      parameters:
      - description: The DAG ID.
        explode: false
        in: path
        name: dag_id
        required: true
        schema:
          type: string
        style: simple
      - description: The DAG run ID.
        explode: false
        in: path
        name: dag_run_id
        required: true
        schema:
          type: string
        style: simple
      - description: The task ID.
        explode: false
        in: path
        name: task_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskInstance"
          description: Success.
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Get a task instance
      tags:
      - TaskInstance
      x-openapi-router-controller: airflow.api_connexion.endpoints.task_instance_endpoint
      x-accepts:
      - application/json
    patch:
      description: |
        Updates the state for single task instance.
        *New in version 2.5.0*
      operationId: patch_task_instance
      parameters:
      - description: The DAG ID.
        explode: false
        in: path
        name: dag_id
        required: true
        schema:
          type: string
        style: simple
      - description: The DAG run ID.
        explode: false
        in: path
        name: dag_run_id
        required: true
        schema:
          type: string
        style: simple
      - description: The task ID.
        explode: false
        in: path
        name: task_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTaskInstance"
        description: Parameters of action
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskInstanceReference"
          description: Success.
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Updates the state of a task instance
      tags:
      - TaskInstance
      x-openapi-router-controller: airflow.api_connexion.endpoints.task_instance_endpoint
      x-content-type: application/json
      x-accepts:
      - application/json
  /dags/{dag_id}/dagRuns/{dag_run_id}/taskInstances/{task_id}/{map_index}:
    get:
      description: |
        Get details of a mapped task instance.

        *New in version 2.3.0*
      operationId: get_mapped_task_instance
      parameters:
      - description: The DAG ID.
        explode: false
        in: path
        name: dag_id
        required: true
        schema:
          type: string
        style: simple
      - description: The DAG run ID.
        explode: false
        in: path
        name: dag_run_id
        required: true
        schema:
          type: string
        style: simple
      - description: The task ID.
        explode: false
        in: path
        name: task_id
        required: true
        schema:
          type: string
        style: simple
      - description: The map index.
        explode: false
        in: path
        name: map_index
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskInstance"
          description: Success.
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Get a mapped task instance
      tags:
      - TaskInstance
      x-openapi-router-controller: airflow.api_connexion.endpoints.task_instance_endpoint
      x-accepts:
      - application/json
    patch:
      description: |
        Updates the state for single mapped task instance.
        *New in version 2.5.0*
      operationId: patch_mapped_task_instance
      parameters:
      - description: The DAG ID.
        explode: false
        in: path
        name: dag_id
        required: true
        schema:
          type: string
        style: simple
      - description: The DAG run ID.
        explode: false
        in: path
        name: dag_run_id
        required: true
        schema:
          type: string
        style: simple
      - description: The task ID.
        explode: false
        in: path
        name: task_id
        required: true
        schema:
          type: string
        style: simple
      - description: The map index.
        explode: false
        in: path
        name: map_index
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTaskInstance"
        description: Parameters of action
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskInstanceReference"
          description: Success.
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Updates the state of a mapped task instance
      tags:
      - TaskInstance
      x-openapi-router-controller: airflow.api_connexion.endpoints.task_instance_endpoint
      x-content-type: application/json
      x-accepts:
      - application/json
  /dags/{dag_id}/dagRuns/{dag_run_id}/taskInstances/{task_id}/listMapped:
    get:
      description: |
        Get details of all mapped task instances.

        *New in version 2.3.0*
      operationId: get_mapped_task_instances
      parameters:
      - description: The DAG ID.
        explode: false
        in: path
        name: dag_id
        required: true
        schema:
          type: string
        style: simple
      - description: The DAG run ID.
        explode: false
        in: path
        name: dag_run_id
        required: true
        schema:
          type: string
        style: simple
      - description: The task ID.
        explode: false
        in: path
        name: task_id
        required: true
        schema:
          type: string
        style: simple
      - description: The numbers of items to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          type: integer
        style: form
      - description: The number of items to skip before starting to collect the result
          set.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: |
          Returns objects greater or equal to the specified date.

          This can be combined with execution_date_lte parameter to receive only the selected period.
        explode: true
        in: query
        name: execution_date_gte
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |
          Returns objects less than or equal to the specified date.

          This can be combined with execution_date_gte parameter to receive only the selected period.
        explode: true
        in: query
        name: execution_date_lte
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |
          Returns objects greater or equal the specified date.

          This can be combined with start_date_lte parameter to receive only the selected period.
        explode: true
        in: query
        name: start_date_gte
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |
          Returns objects less or equal the specified date.

          This can be combined with start_date_gte parameter to receive only the selected period.
        explode: true
        in: query
        name: start_date_lte
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |
          Returns objects greater or equal the specified date.

          This can be combined with start_date_lte parameter to receive only the selected period.
        explode: true
        in: query
        name: end_date_gte
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |
          Returns objects less than or equal to the specified date.

          This can be combined with start_date_gte parameter to receive only the selected period.
        explode: true
        in: query
        name: end_date_lte
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |
          Returns objects greater or equal the specified date.

          This can be combined with updated_at_lte parameter to receive only the selected period.

          *New in version 2.6.0*
        explode: true
        in: query
        name: updated_at_gte
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |
          Returns objects less or equal the specified date.

          This can be combined with updated_at_gte parameter to receive only the selected period.

          *New in version 2.6.0*
        explode: true
        in: query
        name: updated_at_lte
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: |
          Returns objects greater than or equal to the specified values.

          This can be combined with duration_lte parameter to receive only the selected period.
        explode: true
        in: query
        name: duration_gte
        required: false
        schema:
          type: number
        style: form
      - description: |
          Returns objects less than or equal to the specified values.

          This can be combined with duration_gte parameter to receive only the selected range.
        explode: true
        in: query
        name: duration_lte
        required: false
        schema:
          type: number
        style: form
      - description: The value can be repeated to retrieve multiple matching values
          (OR condition).
        explode: true
        in: query
        name: state
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The value can be repeated to retrieve multiple matching values
          (OR condition).
        explode: true
        in: query
        name: pool
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The value can be repeated to retrieve multiple matching values
          (OR condition).
        explode: true
        in: query
        name: queue
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The value can be repeated to retrieve multiple matching values
          (OR condition).
        explode: true
        in: query
        name: executor
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |
          The name of the field to order the results by.
          Prefix a field name with `-` to reverse the sort order.

          *New in version 2.1.0*
        explode: true
        in: query
        name: order_by
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskInstanceCollection"
          description: Success.
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: List mapped task instances
      tags:
      - TaskInstance
      x-openapi-router-controller: airflow.api_connexion.endpoints.task_instance_endpoint
      x-accepts:
      - application/json
  /dags/~/dagRuns/~/taskInstances/list:
    post:
      description: |
        List task instances from all DAGs and DAG runs.
        This endpoint is a POST to allow filtering across a large number of DAG IDs, where as a GET it would run in to maximum HTTP request URL length limits.
      operationId: get_task_instances_batch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListTaskInstanceForm"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskInstanceCollection"
          description: Success.
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: List task instances (batch)
      tags:
      - TaskInstance
      x-openapi-router-controller: airflow.api_connexion.endpoints.task_instance_endpoint
      x-content-type: application/json
      x-accepts:
      - application/json
  /dags/{dag_id}/dagRuns/{dag_run_id}/taskInstances/{task_id}/tries/{task_try_number}:
    get:
      description: |
        Get details of a task instance try.

        *New in version 2.10.0*
      operationId: get_task_instance_try_details
      parameters:
      - description: The DAG ID.
        explode: false
        in: path
        name: dag_id
        required: true
        schema:
          type: string
        style: simple
      - description: The DAG run ID.
        explode: false
        in: path
        name: dag_run_id
        required: true
        schema:
          type: string
        style: simple
      - description: The task ID.
        explode: false
        in: path
        name: task_id
        required: true
        schema:
          type: string
        style: simple
      - description: The task try number.
        explode: false
        in: path
        name: task_try_number
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskInstanceHistory"
          description: Success.
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: get taskinstance try
      tags:
      - TaskInstance
      x-openapi-router-controller: airflow.api_connexion.endpoints.task_instance_endpoint
      x-accepts:
      - application/json
  /dags/{dag_id}/dagRuns/{dag_run_id}/taskInstances/{task_id}/tries:
    get:
      description: |
        Get details of all task instance tries.

        *New in version 2.10.0*
      operationId: get_task_instance_tries
      parameters:
      - description: The DAG ID.
        explode: false
        in: path
        name: dag_id
        required: true
        schema:
          type: string
        style: simple
      - description: The DAG run ID.
        explode: false
        in: path
        name: dag_run_id
        required: true
        schema:
          type: string
        style: simple
      - description: The task ID.
        explode: false
        in: path
        name: task_id
        required: true
        schema:
          type: string
        style: simple
      - description: The numbers of items to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          type: integer
        style: form
      - description: The number of items to skip before starting to collect the result
          set.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: |
          The name of the field to order the results by.
          Prefix a field name with `-` to reverse the sort order.

          *New in version 2.1.0*
        explode: true
        in: query
        name: order_by
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskInstanceHistoryCollection"
          description: Success.
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: List task instance tries
      tags:
      - TaskInstance
      x-openapi-router-controller: airflow.api_connexion.endpoints.task_instance_endpoint
      x-accepts:
      - application/json
  /dags/{dag_id}/dagRuns/{dag_run_id}/taskInstances/{task_id}/{map_index}/tries:
    get:
      description: |
        Get details of all task instance tries.

        *New in version 2.10.0*
      operationId: get_mapped_task_instance_tries
      parameters:
      - description: The DAG ID.
        explode: false
        in: path
        name: dag_id
        required: true
        schema:
          type: string
        style: simple
      - description: The DAG run ID.
        explode: false
        in: path
        name: dag_run_id
        required: true
        schema:
          type: string
        style: simple
      - description: The task ID.
        explode: false
        in: path
        name: task_id
        required: true
        schema:
          type: string
        style: simple
      - description: The map index.
        explode: false
        in: path
        name: map_index
        required: true
        schema:
          type: integer
        style: simple
      - description: The numbers of items to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          type: integer
        style: form
      - description: The number of items to skip before starting to collect the result
          set.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: |
          The name of the field to order the results by.
          Prefix a field name with `-` to reverse the sort order.

          *New in version 2.1.0*
        explode: true
        in: query
        name: order_by
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskInstanceHistoryCollection"
          description: Success.
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: List mapped task instance tries
      tags:
      - TaskInstance
      x-openapi-router-controller: airflow.api_connexion.endpoints.task_instance_endpoint
      x-accepts:
      - application/json
  /dags/{dag_id}/dagRuns/{dag_run_id}/taskInstances/{task_id}/{map_index}/tries/{task_try_number}:
    get:
      description: |
        Get details of a mapped task instance try.

        *New in version 2.10.0*
      operationId: get_mapped_task_instance_try_details
      parameters:
      - description: The DAG ID.
        explode: false
        in: path
        name: dag_id
        required: true
        schema:
          type: string
        style: simple
      - description: The DAG run ID.
        explode: false
        in: path
        name: dag_run_id
        required: true
        schema:
          type: string
        style: simple
      - description: The task ID.
        explode: false
        in: path
        name: task_id
        required: true
        schema:
          type: string
        style: simple
      - description: The map index.
        explode: false
        in: path
        name: map_index
        required: true
        schema:
          type: integer
        style: simple
      - description: The task try number.
        explode: false
        in: path
        name: task_try_number
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskInstanceHistory"
          description: Success.
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: get mapped taskinstance try
      tags:
      - TaskInstance
      x-openapi-router-controller: airflow.api_connexion.endpoints.task_instance_endpoint
      x-accepts:
      - application/json
  /variables:
    get:
      description: "The collection does not contain data. To get data, you must get\
        \ a single entity."
      operationId: get_variables
      parameters:
      - description: The numbers of items to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          type: integer
        style: form
      - description: The number of items to skip before starting to collect the result
          set.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: |
          The name of the field to order the results by.
          Prefix a field name with `-` to reverse the sort order.

          *New in version 2.1.0*
        explode: true
        in: query
        name: order_by
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VariableCollection"
          description: Success.
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
      summary: List variables
      tags:
      - Variable
      x-openapi-router-controller: airflow.api_connexion.endpoints.variable_endpoint
      x-accepts:
      - application/json
    post:
      operationId: post_variables
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Variable"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Variable"
          description: Success.
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
      summary: Create a variable
      tags:
      - Variable
      x-openapi-router-controller: airflow.api_connexion.endpoints.variable_endpoint
      x-content-type: application/json
      x-accepts:
      - application/json
  /variables/{variable_key}:
    delete:
      operationId: delete_variable
      parameters:
      - description: The variable Key.
        explode: false
        in: path
        name: variable_key
        required: true
        schema:
          format: path
          type: string
        style: simple
      responses:
        "204":
          description: Success.
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Delete a variable
      tags:
      - Variable
      x-openapi-router-controller: airflow.api_connexion.endpoints.variable_endpoint
      x-accepts:
      - application/json
    get:
      description: Get a variable by key.
      operationId: get_variable
      parameters:
      - description: The variable Key.
        explode: false
        in: path
        name: variable_key
        required: true
        schema:
          format: path
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Variable"
          description: Success.
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Get a variable
      tags:
      - Variable
      x-openapi-router-controller: airflow.api_connexion.endpoints.variable_endpoint
      x-accepts:
      - application/json
    patch:
      description: Update a variable by key.
      operationId: patch_variable
      parameters:
      - description: The variable Key.
        explode: false
        in: path
        name: variable_key
        required: true
        schema:
          format: path
          type: string
        style: simple
      - description: |
          The fields to update on the resource. If absent or empty, all modifiable fields are updated.
          A comma-separated list of fully qualified names of fields.
        explode: false
        in: query
        name: update_mask
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Variable"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Variable"
          description: Success.
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Update a variable
      tags:
      - Variable
      x-openapi-router-controller: airflow.api_connexion.endpoints.variable_endpoint
      x-content-type: application/json
      x-accepts:
      - application/json
  /dags/{dag_id}/dagRuns/{dag_run_id}/taskInstances/{task_id}/xcomEntries:
    get:
      description: "This endpoint allows specifying `~` as the dag_id, dag_run_id,\
        \ task_id to retrieve XCOM entries for for all DAGs, DAG runs and task instances.\
        \ XCom values won't be returned as they can be large. Use this endpoint to\
        \ get a list of XCom entries and then fetch individual entry to get value."
      operationId: get_xcom_entries
      parameters:
      - description: The DAG ID.
        explode: false
        in: path
        name: dag_id
        required: true
        schema:
          type: string
        style: simple
      - description: The DAG run ID.
        explode: false
        in: path
        name: dag_run_id
        required: true
        schema:
          type: string
        style: simple
      - description: The task ID.
        explode: false
        in: path
        name: task_id
        required: true
        schema:
          type: string
        style: simple
      - description: Filter on map index for mapped task.
        explode: true
        in: query
        name: map_index
        required: false
        schema:
          type: integer
        style: form
      - description: Only filter the XCom records which have the provided key.
        explode: true
        in: query
        name: xcom_key
        required: false
        schema:
          type: string
        style: form
      - description: The numbers of items to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          type: integer
        style: form
      - description: The number of items to skip before starting to collect the result
          set.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/XComCollection"
          description: Success.
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
      summary: List XCom entries
      tags:
      - XCom
      x-openapi-router-controller: airflow.api_connexion.endpoints.xcom_endpoint
      x-accepts:
      - application/json
  /dags/{dag_id}/dagRuns/{dag_run_id}/taskInstances/{task_id}/xcomEntries/{xcom_key}:
    get:
      operationId: get_xcom_entry
      parameters:
      - description: The DAG ID.
        explode: false
        in: path
        name: dag_id
        required: true
        schema:
          type: string
        style: simple
      - description: The DAG run ID.
        explode: false
        in: path
        name: dag_run_id
        required: true
        schema:
          type: string
        style: simple
      - description: The task ID.
        explode: false
        in: path
        name: task_id
        required: true
        schema:
          type: string
        style: simple
      - description: The XCom key.
        explode: false
        in: path
        name: xcom_key
        required: true
        schema:
          format: path
          type: string
        style: simple
      - description: Filter on map index for mapped task.
        explode: true
        in: query
        name: map_index
        required: false
        schema:
          type: integer
        style: form
      - description: |
          Whether to deserialize an XCom value when using a custom XCom backend.

          The XCom API endpoint calls `orm_deserialize_value` by default since an XCom may contain value
          that is potentially expensive to deserialize in the web server. Setting this to true overrides
          the consideration, and calls `deserialize_value` instead.

          This parameter is not meaningful when using the default XCom backend.

          *New in version 2.4.0*
        explode: true
        in: query
        name: deserialize
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: |
          Whether to convert the XCom value to be a string. XCom values can be of Any data type.

          If set to true (default) the Any value will be returned as string, e.g. a Python representation
          of a dict. If set to false it will return the raw data as dict, list, string or whatever was stored.

          This parameter is not meaningful when using XCom pickling, then it is always returned as string.

          *New in version 2.10.0*
        explode: true
        in: query
        name: stringify
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/XCom"
          description: Success.
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Get an XCom entry
      tags:
      - XCom
      x-openapi-router-controller: airflow.api_connexion.endpoints.xcom_endpoint
      x-accepts:
      - application/json
  /dags/{dag_id}/dagRuns/{dag_run_id}/taskInstances/{task_id}/links:
    get:
      description: |
        List extra links for task instance.
      operationId: get_extra_links
      parameters:
      - description: The DAG ID.
        explode: false
        in: path
        name: dag_id
        required: true
        schema:
          type: string
        style: simple
      - description: The DAG run ID.
        explode: false
        in: path
        name: dag_run_id
        required: true
        schema:
          type: string
        style: simple
      - description: The task ID.
        explode: false
        in: path
        name: task_id
        required: true
        schema:
          type: string
        style: simple
      - description: Filter on map index for mapped task.
        explode: true
        in: query
        name: map_index
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExtraLinkCollection"
          description: Success.
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: List extra links
      tags:
      - TaskInstance
      x-openapi-router-controller: airflow.api_connexion.endpoints.extra_link_endpoint
      x-accepts:
      - application/json
  /dags/{dag_id}/dagRuns/{dag_run_id}/taskInstances/{task_id}/logs/{task_try_number}:
    get:
      description: |
        Get logs for a specific task instance and its try number.
        To get log from specific character position, following way of using
        URLSafeSerializer can be used.

        Example:
        ```
        from itsdangerous.url_safe import URLSafeSerializer

        request_url = f"api/v1/dags/{DAG_ID}/dagRuns/{RUN_ID}/taskInstances/{TASK_ID}/logs/1"
        key = app.config["SECRET_KEY"]
        serializer = URLSafeSerializer(key)
        token = serializer.dumps({"log_pos": 10000})

        response = self.client.get(
            request_url,
            query_string={"token": token},
            headers={"Accept": "text/plain"},
            environ_overrides={"REMOTE_USER": "test"},
        )
        continuation_token = response.json["continuation_token"]
            metadata = URLSafeSerializer(key).loads(continuation_token)
            log_pos = metadata["log_pos"]
            end_of_log = metadata["end_of_log"]
        ```
        If log_pos is passed as 10000 like the above example, it renders the logs starting
        from char position 10000 to last (not the end as the logs may be tailing behind in
        running state). This way pagination can be done with metadata as part of the token.
      operationId: get_log
      parameters:
      - description: The DAG ID.
        explode: false
        in: path
        name: dag_id
        required: true
        schema:
          type: string
        style: simple
      - description: The DAG run ID.
        explode: false
        in: path
        name: dag_run_id
        required: true
        schema:
          type: string
        style: simple
      - description: The task ID.
        explode: false
        in: path
        name: task_id
        required: true
        schema:
          type: string
        style: simple
      - description: The task try number.
        explode: false
        in: path
        name: task_try_number
        required: true
        schema:
          type: integer
        style: simple
      - description: |
          A full content will be returned.
          By default, only the first fragment will be returned.
        explode: true
        in: query
        name: full_content
        required: false
        schema:
          type: boolean
        style: form
      - description: Filter on map index for mapped task.
        explode: true
        in: query
        name: map_index
        required: false
        schema:
          type: integer
        style: form
      - description: |
          A token that allows you to continue fetching logs.
          If passed, it will specify the location from which the download should be continued.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/get_log_200_response"
            text/plain:
              schema:
                type: string
          description: Success.
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Get logs
      tags:
      - TaskInstance
      x-openapi-router-controller: airflow.api_connexion.endpoints.log_endpoint
      x-accepts:
      - application/json
      - text/plain
  /dags/{dag_id}/details:
    get:
      description: |
        The response contains many DAG attributes, so the response can be large. If possible, consider using GET /dags/{dag_id}.
      operationId: get_dag_details
      parameters:
      - description: The DAG ID.
        explode: false
        in: path
        name: dag_id
        required: true
        schema:
          type: string
        style: simple
      - description: |
          List of field for return.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DAGDetail"
          description: Success.
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Get a simplified representation of DAG
      tags:
      - DAG
      x-openapi-router-controller: airflow.api_connexion.endpoints.dag_endpoint
      x-accepts:
      - application/json
  /dags/{dag_id}/tasks:
    get:
      operationId: get_tasks
      parameters:
      - description: The DAG ID.
        explode: false
        in: path
        name: dag_id
        required: true
        schema:
          type: string
        style: simple
      - description: |
          The name of the field to order the results by.
          Prefix a field name with `-` to reverse the sort order.

          *New in version 2.1.0*
        explode: true
        in: query
        name: order_by
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskCollection"
          description: Success.
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Get tasks for DAG
      tags:
      - DAG
      x-openapi-router-controller: airflow.api_connexion.endpoints.task_endpoint
      x-accepts:
      - application/json
  /dags/{dag_id}/tasks/{task_id}:
    get:
      operationId: get_task
      parameters:
      - description: The DAG ID.
        explode: false
        in: path
        name: dag_id
        required: true
        schema:
          type: string
        style: simple
      - description: The task ID.
        explode: false
        in: path
        name: task_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
          description: Success.
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Get simplified representation of a task
      tags:
      - DAG
      x-openapi-router-controller: airflow.api_connexion.endpoints.task_endpoint
      x-accepts:
      - application/json
  /dagStats:
    get:
      operationId: get_dag_stats
      parameters:
      - description: |
          One or more DAG IDs separated by commas to filter relevant Dags.
        explode: true
        in: query
        name: dag_ids
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DagStatsCollectionSchema"
          description: Success.
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
      summary: List Dag statistics
      tags:
      - DagStats
      x-openapi-router-controller: airflow.api_connexion.endpoints.dag_stats_endpoint
      x-accepts:
      - application/json
  /dagSources/{file_token}:
    get:
      description: |
        Get a source code using file token.
      operationId: get_dag_source
      parameters:
      - description: |
          The key containing the encrypted path to the file. Encryption and decryption take place only on
          the server. This prevents the client from reading an non-DAG file. This also ensures API
          extensibility, because the format of encrypted data may change.
        explode: false
        in: path
        name: file_token
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/get_dag_source_200_response"
            text/plain:
              schema:
                type: string
          description: Success.
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
        "406":
          $ref: "#/components/responses/NotAcceptable"
      summary: Get a source code
      tags:
      - DAG
      x-openapi-router-controller: airflow.api_connexion.endpoints.dag_source_endpoint
      x-accepts:
      - application/json
      - text/plain
  /dagWarnings:
    get:
      operationId: get_dag_warnings
      parameters:
      - description: "If set, only return DAG warnings with this dag_id."
        explode: true
        in: query
        name: dag_id
        required: false
        schema:
          type: string
        style: form
      - description: "If set, only return DAG warnings with this type."
        explode: true
        in: query
        name: warning_type
        required: false
        schema:
          type: string
        style: form
      - description: The numbers of items to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          type: integer
        style: form
      - description: The number of items to skip before starting to collect the result
          set.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: |
          The name of the field to order the results by.
          Prefix a field name with `-` to reverse the sort order.

          *New in version 2.1.0*
        explode: true
        in: query
        name: order_by
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DagWarningCollection"
          description: Success.
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
      summary: List dag warnings
      tags:
      - DagWarning
      x-openapi-router-controller: airflow.api_connexion.endpoints.dag_warning_endpoint
      x-accepts:
      - application/json
  /datasets:
    get:
      operationId: get_datasets
      parameters:
      - description: The numbers of items to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          type: integer
        style: form
      - description: The number of items to skip before starting to collect the result
          set.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: |
          The name of the field to order the results by.
          Prefix a field name with `-` to reverse the sort order.

          *New in version 2.1.0*
        explode: true
        in: query
        name: order_by
        required: false
        schema:
          type: string
        style: form
      - description: |
          If set, only return datasets with uris matching this pattern.
        explode: true
        in: query
        name: uri_pattern
        required: false
        schema:
          type: string
        style: form
      - description: |
          One or more DAG IDs separated by commas to filter datasets by associated DAGs either consuming or producing.

          *New in version 2.9.0*
        explode: true
        in: query
        name: dag_ids
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatasetCollection"
          description: Success.
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
      summary: List datasets
      tags:
      - Dataset
      x-openapi-router-controller: airflow.api_connexion.endpoints.dataset_endpoint
      x-accepts:
      - application/json
  /datasets/{uri}:
    get:
      description: Get a dataset by uri.
      operationId: get_dataset
      parameters:
      - description: The encoded Dataset URI
        explode: false
        in: path
        name: uri
        required: true
        schema:
          format: path
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dataset"
          description: Success.
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Get a dataset
      tags:
      - Dataset
      x-openapi-router-controller: airflow.api_connexion.endpoints.dataset_endpoint
      x-accepts:
      - application/json
  /datasets/events:
    get:
      description: Get dataset events
      operationId: get_dataset_events
      parameters:
      - description: The numbers of items to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          type: integer
        style: form
      - description: The number of items to skip before starting to collect the result
          set.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: |
          The name of the field to order the results by.
          Prefix a field name with `-` to reverse the sort order.

          *New in version 2.1.0*
        explode: true
        in: query
        name: order_by
        required: false
        schema:
          type: string
        style: form
      - description: The Dataset ID that updated the dataset.
        explode: true
        in: query
        name: dataset_id
        required: false
        schema:
          type: integer
        style: form
      - description: The DAG ID that updated the dataset.
        explode: true
        in: query
        name: source_dag_id
        required: false
        schema:
          type: string
        style: form
      - description: The task ID that updated the dataset.
        explode: true
        in: query
        name: source_task_id
        required: false
        schema:
          type: string
        style: form
      - description: The DAG run ID that updated the dataset.
        explode: true
        in: query
        name: source_run_id
        required: false
        schema:
          type: string
        style: form
      - description: The map index that updated the dataset.
        explode: true
        in: query
        name: source_map_index
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatasetEventCollection"
          description: Success.
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Get dataset events
      tags:
      - Dataset
      x-openapi-router-controller: airflow.api_connexion.endpoints.dataset_endpoint
      x-accepts:
      - application/json
    post:
      description: Create dataset event
      operationId: create_dataset_event
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDatasetEvent"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatasetEvent"
          description: Success.
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Create dataset event
      tags:
      - Dataset
      x-openapi-router-controller: airflow.api_connexion.endpoints.dataset_endpoint
      x-content-type: application/json
      x-accepts:
      - application/json
  /config:
    get:
      operationId: get_config
      parameters:
      - description: "If given, only return config of this section."
        explode: true
        in: query
        name: section
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                sections:
                - name: core
                  options:
                  - key: dags_folder
                    value: /home/user/my-dags-folder
                - name: smtp
                  options:
                  - key: smtp_host
                    value: localhost
                  - key: smtp_mail_from
                    value: airflow@example.com
              schema:
                $ref: "#/components/schemas/Config"
            text/plain:
              example: |
                [core]
                dags_folder = /home/user/my-dags-folder
                [smtp]
                smtp_host = localhost
                smtp_mail_from =  airflow@example.com
              schema:
                type: string
          description: Success.
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Get current configuration
      tags:
      - Config
      x-openapi-router-controller: airflow.api_connexion.endpoints.config_endpoint
      x-accepts:
      - application/json
      - text/plain
  /config/section/{section}/option/{option}:
    get:
      operationId: get_value
      parameters:
      - explode: false
        in: path
        name: section
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: option
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                sections:
                - name: core
                  options:
                  - key: dags_folder
                    value: /home/user/my-dags-folder
              schema:
                $ref: "#/components/schemas/Config"
            text/plain:
              example: |
                [core]
                dags_folder = /home/user/my-dags-folder
              schema:
                type: string
          description: Success.
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Get a option from configuration
      tags:
      - Config
      x-openapi-router-controller: airflow.api_connexion.endpoints.config_endpoint
      x-accepts:
      - application/json
      - text/plain
  /health:
    get:
      description: |
        Get the status of Airflow's metadatabase, triggerer and scheduler. It includes info about
        metadatabase and last heartbeat of scheduler and triggerer.
      operationId: get_health
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthInfo"
          description: Success.
      summary: Get instance status
      tags:
      - Monitoring
      x-openapi-router-controller: airflow.api_connexion.endpoints.health_endpoint
      x-accepts:
      - application/json
  /version:
    get:
      operationId: get_version
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VersionInfo"
          description: Success.
      summary: Get version information
      tags:
      - Monitoring
      x-openapi-router-controller: airflow.api_connexion.endpoints.version_endpoint
      x-accepts:
      - application/json
  /plugins:
    get:
      description: |
        Get a list of loaded plugins.

        *New in version 2.1.0*
      operationId: get_plugins
      parameters:
      - description: The numbers of items to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          type: integer
        style: form
      - description: The number of items to skip before starting to collect the result
          set.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PluginCollection"
          description: Success
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Get a list of loaded plugins
      tags:
      - Plugin
      x-openapi-router-controller: airflow.api_connexion.endpoints.plugin_endpoint
      x-accepts:
      - application/json
  /roles:
    get:
      deprecated: true
      description: |
        Get a list of roles.

        *This API endpoint is deprecated, please use the endpoint `/auth/fab/v1` for this operation instead.*
      operationId: get_roles
      parameters:
      - description: The numbers of items to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          type: integer
        style: form
      - description: The number of items to skip before starting to collect the result
          set.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: |
          The name of the field to order the results by.
          Prefix a field name with `-` to reverse the sort order.

          *New in version 2.1.0*
        explode: true
        in: query
        name: order_by
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoleCollection"
          description: Success.
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
      summary: List roles
      tags:
      - Role
      x-openapi-router-controller: airflow.api_connexion.endpoints.forward_to_fab_endpoint
      x-accepts:
      - application/json
    post:
      deprecated: true
      description: |
        Create a new role.

        *This API endpoint is deprecated, please use the endpoint `/auth/fab/v1` for this operation instead.*
      operationId: post_role
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Role"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Role"
          description: Success.
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
      summary: Create a role
      tags:
      - Role
      x-openapi-router-controller: airflow.api_connexion.endpoints.forward_to_fab_endpoint
      x-content-type: application/json
      x-accepts:
      - application/json
  /roles/{role_name}:
    delete:
      deprecated: true
      description: |
        Delete a role.

        *This API endpoint is deprecated, please use the endpoint `/auth/fab/v1` for this operation instead.*
      operationId: delete_role
      parameters:
      - description: The role name
        explode: false
        in: path
        name: role_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success.
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Delete a role
      tags:
      - Role
      x-openapi-router-controller: airflow.api_connexion.endpoints.forward_to_fab_endpoint
      x-accepts:
      - application/json
    get:
      deprecated: true
      description: |
        Get a role.

        *This API endpoint is deprecated, please use the endpoint `/auth/fab/v1` for this operation instead.*
      operationId: get_role
      parameters:
      - description: The role name
        explode: false
        in: path
        name: role_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Role"
          description: Success.
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Get a role
      tags:
      - Role
      x-openapi-router-controller: airflow.api_connexion.endpoints.forward_to_fab_endpoint
      x-accepts:
      - application/json
    patch:
      deprecated: true
      description: |
        Update a role.

        *This API endpoint is deprecated, please use the endpoint `/auth/fab/v1` for this operation instead.*
      operationId: patch_role
      parameters:
      - description: The role name
        explode: false
        in: path
        name: role_name
        required: true
        schema:
          type: string
        style: simple
      - description: |
          The fields to update on the resource. If absent or empty, all modifiable fields are updated.
          A comma-separated list of fully qualified names of fields.
        explode: false
        in: query
        name: update_mask
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Role"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Role"
          description: Success.
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Update a role
      tags:
      - Role
      x-openapi-router-controller: airflow.api_connexion.endpoints.forward_to_fab_endpoint
      x-content-type: application/json
      x-accepts:
      - application/json
  /permissions:
    get:
      deprecated: true
      description: |
        Get a list of permissions.

        *This API endpoint is deprecated, please use the endpoint `/auth/fab/v1` for this operation instead.*
      operationId: get_permissions
      parameters:
      - description: The numbers of items to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          type: integer
        style: form
      - description: The number of items to skip before starting to collect the result
          set.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActionCollection"
          description: Success.
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
      summary: List permissions
      tags:
      - Permission
      x-openapi-router-controller: airflow.api_connexion.endpoints.forward_to_fab_endpoint
      x-accepts:
      - application/json
  /users:
    get:
      deprecated: true
      description: |
        Get a list of users.

        *This API endpoint is deprecated, please use the endpoint `/auth/fab/v1` for this operation instead.*
      operationId: get_users
      parameters:
      - description: The numbers of items to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          type: integer
        style: form
      - description: The number of items to skip before starting to collect the result
          set.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          minimum: 0
          type: integer
        style: form
      - description: |
          The name of the field to order the results by.
          Prefix a field name with `-` to reverse the sort order.

          *New in version 2.1.0*
        explode: true
        in: query
        name: order_by
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserCollection"
          description: Success.
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
      summary: List users
      tags:
      - User
      x-openapi-router-controller: airflow.api_connexion.endpoints.forward_to_fab_endpoint
      x-accepts:
      - application/json
    post:
      deprecated: true
      description: |
        Create a new user with unique username and email.

        *This API endpoint is deprecated, please use the endpoint `/auth/fab/v1` for this operation instead.*
      operationId: post_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
          description: Success.
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "409":
          $ref: "#/components/responses/AlreadyExists"
      summary: Create a user
      tags:
      - User
      x-openapi-router-controller: airflow.api_connexion.endpoints.forward_to_fab_endpoint
      x-content-type: application/json
      x-accepts:
      - application/json
  /users/{username}:
    delete:
      deprecated: true
      description: |
        Delete a user with a specific username.

        *This API endpoint is deprecated, please use the endpoint `/auth/fab/v1` for this operation instead.*
      operationId: delete_user
      parameters:
      - description: |
          The username of the user.

          *New in version 2.1.0*
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success.
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Delete a user
      tags:
      - User
      x-openapi-router-controller: airflow.api_connexion.endpoints.forward_to_fab_endpoint
      x-accepts:
      - application/json
    get:
      deprecated: true
      description: |
        Get a user with a specific username.

        *This API endpoint is deprecated, please use the endpoint `/auth/fab/v1` for this operation instead.*
      operationId: get_user
      parameters:
      - description: |
          The username of the user.

          *New in version 2.1.0*
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserCollectionItem"
          description: Success.
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Get a user
      tags:
      - User
      x-openapi-router-controller: airflow.api_connexion.endpoints.forward_to_fab_endpoint
      x-accepts:
      - application/json
    patch:
      deprecated: true
      description: |
        Update fields for a user.

        *This API endpoint is deprecated, please use the endpoint `/auth/fab/v1` for this operation instead.*
      operationId: patch_user
      parameters:
      - description: |
          The username of the user.

          *New in version 2.1.0*
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      - description: |
          The fields to update on the resource. If absent or empty, all modifiable fields are updated.
          A comma-separated list of fully qualified names of fields.
        explode: false
        in: query
        name: update_mask
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserCollectionItem"
          description: Success.
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthenticated"
        "403":
          $ref: "#/components/responses/PermissionDenied"
        "404":
          $ref: "#/components/responses/NotFound"
      summary: Update a user
      tags:
      - User
      x-openapi-router-controller: airflow.api_connexion.endpoints.forward_to_fab_endpoint
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  callbacks: {}
  examples: {}
  headers: {}
  links: {}
  parameters:
    PageOffset:
      description: The number of items to skip before starting to collect the result
        set.
      explode: true
      in: query
      name: offset
      required: false
      schema:
        minimum: 0
        type: integer
      style: form
    PageLimit:
      description: The numbers of items to return.
      explode: true
      in: query
      name: limit
      required: false
      schema:
        default: 100
        type: integer
      style: form
    Username:
      description: |
        The username of the user.

        *New in version 2.1.0*
      explode: false
      in: path
      name: username
      required: true
      schema:
        type: string
      style: simple
    RoleName:
      description: The role name
      explode: false
      in: path
      name: role_name
      required: true
      schema:
        type: string
      style: simple
    ConnectionID:
      description: The connection ID.
      explode: false
      in: path
      name: connection_id
      required: true
      schema:
        type: string
      style: simple
    DAGID:
      description: The DAG ID.
      explode: false
      in: path
      name: dag_id
      required: true
      schema:
        type: string
      style: simple
    TaskID:
      description: The task ID.
      explode: false
      in: path
      name: task_id
      required: true
      schema:
        type: string
      style: simple
    Event:
      description: The name of event log.
      explode: true
      in: query
      name: event
      required: false
      schema:
        type: string
      style: form
    Owner:
      description: The owner's name of event log.
      explode: true
      in: query
      name: owner
      required: false
      schema:
        type: string
      style: form
    Before:
      description: Timestamp to select event logs occurring before.
      explode: true
      in: query
      name: before
      required: false
      schema:
        format: date-time
        type: string
      style: form
    After:
      description: Timestamp to select event logs occurring after.
      explode: true
      in: query
      name: after
      required: false
      schema:
        format: date-time
        type: string
      style: form
    MapIndex:
      description: The map index.
      explode: false
      in: path
      name: map_index
      required: true
      schema:
        type: integer
      style: simple
    DAGRunID:
      description: The DAG run ID.
      explode: false
      in: path
      name: dag_run_id
      required: true
      schema:
        type: string
      style: simple
    TaskTryNumber:
      description: The task try number.
      explode: false
      in: path
      name: task_try_number
      required: true
      schema:
        type: integer
      style: simple
    EventLogID:
      description: The event log ID.
      explode: false
      in: path
      name: event_log_id
      required: true
      schema:
        type: integer
      style: simple
    ImportErrorID:
      description: The import error ID.
      explode: false
      in: path
      name: import_error_id
      required: true
      schema:
        type: integer
      style: simple
    DatasetURI:
      description: The encoded Dataset URI
      explode: false
      in: path
      name: uri
      required: true
      schema:
        format: path
        type: string
      style: simple
    PoolName:
      description: The pool name.
      explode: false
      in: path
      name: pool_name
      required: true
      schema:
        type: string
      style: simple
    VariableKey:
      description: The variable Key.
      explode: false
      in: path
      name: variable_key
      required: true
      schema:
        format: path
        type: string
      style: simple
    FullContent:
      description: |
        A full content will be returned.
        By default, only the first fragment will be returned.
      explode: true
      in: query
      name: full_content
      required: false
      schema:
        type: boolean
      style: form
    ContinuationToken:
      description: |
        A token that allows you to continue fetching logs.
        If passed, it will specify the location from which the download should be continued.
      explode: true
      in: query
      name: token
      required: false
      schema:
        type: string
      style: form
    XComKey:
      description: The XCom key.
      explode: false
      in: path
      name: xcom_key
      required: true
      schema:
        format: path
        type: string
      style: simple
    FilterExecutionDateGTE:
      description: |
        Returns objects greater or equal to the specified date.

        This can be combined with execution_date_lte parameter to receive only the selected period.
      explode: true
      in: query
      name: execution_date_gte
      required: false
      schema:
        format: date-time
        type: string
      style: form
    FilterExecutionDateLTE:
      description: |
        Returns objects less than or equal to the specified date.

        This can be combined with execution_date_gte parameter to receive only the selected period.
      explode: true
      in: query
      name: execution_date_lte
      required: false
      schema:
        format: date-time
        type: string
      style: form
    FilterStartDateGTE:
      description: |
        Returns objects greater or equal the specified date.

        This can be combined with start_date_lte parameter to receive only the selected period.
      explode: true
      in: query
      name: start_date_gte
      required: false
      schema:
        format: date-time
        type: string
      style: form
    FilterStartDateLTE:
      description: |
        Returns objects less or equal the specified date.

        This can be combined with start_date_gte parameter to receive only the selected period.
      explode: true
      in: query
      name: start_date_lte
      required: false
      schema:
        format: date-time
        type: string
      style: form
    FilterEndDateGTE:
      description: |
        Returns objects greater or equal the specified date.

        This can be combined with start_date_lte parameter to receive only the selected period.
      explode: true
      in: query
      name: end_date_gte
      required: false
      schema:
        format: date-time
        type: string
      style: form
    FilterEndDateLTE:
      description: |
        Returns objects less than or equal to the specified date.

        This can be combined with start_date_gte parameter to receive only the selected period.
      explode: true
      in: query
      name: end_date_lte
      required: false
      schema:
        format: date-time
        type: string
      style: form
    FilterDurationGTE:
      description: |
        Returns objects greater than or equal to the specified values.

        This can be combined with duration_lte parameter to receive only the selected period.
      explode: true
      in: query
      name: duration_gte
      required: false
      schema:
        type: number
      style: form
    FilterDurationLTE:
      description: |
        Returns objects less than or equal to the specified values.

        This can be combined with duration_gte parameter to receive only the selected range.
      explode: true
      in: query
      name: duration_lte
      required: false
      schema:
        type: number
      style: form
    FilterState:
      description: The value can be repeated to retrieve multiple matching values
        (OR condition).
      explode: true
      in: query
      name: state
      required: false
      schema:
        items:
          type: string
        type: array
      style: form
    FilterPool:
      description: The value can be repeated to retrieve multiple matching values
        (OR condition).
      explode: true
      in: query
      name: pool
      required: false
      schema:
        items:
          type: string
        type: array
      style: form
    FilterQueue:
      description: The value can be repeated to retrieve multiple matching values
        (OR condition).
      explode: true
      in: query
      name: queue
      required: false
      schema:
        items:
          type: string
        type: array
      style: form
    FilterExecutor:
      description: The value can be repeated to retrieve multiple matching values
        (OR condition).
      explode: true
      in: query
      name: executor
      required: false
      schema:
        items:
          type: string
        type: array
      style: form
    FilterTags:
      description: |
        List of tags to filter results.

        *New in version 2.2.0*
      explode: true
      in: query
      name: tags
      required: false
      schema:
        items:
          type: string
        type: array
      style: form
    FilterDatasetID:
      description: The Dataset ID that updated the dataset.
      explode: true
      in: query
      name: dataset_id
      required: false
      schema:
        type: integer
      style: form
    FilterSourceDAGID:
      description: The DAG ID that updated the dataset.
      explode: true
      in: query
      name: source_dag_id
      required: false
      schema:
        type: string
      style: form
    FilterSourceTaskID:
      description: The task ID that updated the dataset.
      explode: true
      in: query
      name: source_task_id
      required: false
      schema:
        type: string
      style: form
    FilterSourceRunID:
      description: The DAG run ID that updated the dataset.
      explode: true
      in: query
      name: source_run_id
      required: false
      schema:
        type: string
      style: form
    FilterSourceMapIndex:
      description: The map index that updated the dataset.
      explode: true
      in: query
      name: source_map_index
      required: false
      schema:
        type: integer
      style: form
    FilterMapIndex:
      description: Filter on map index for mapped task.
      explode: true
      in: query
      name: map_index
      required: false
      schema:
        type: integer
      style: form
    FilterTryNumber:
      description: Filter on try_number for task instance.
      explode: true
      in: query
      name: try_number
      required: false
      schema:
        type: integer
      style: form
    OrderBy:
      description: |
        The name of the field to order the results by.
        Prefix a field name with `-` to reverse the sort order.

        *New in version 2.1.0*
      explode: true
      in: query
      name: order_by
      required: false
      schema:
        type: string
      style: form
    OnlyActive:
      description: |
        Only filter active DAGs.

        *New in version 2.1.1*
      explode: true
      in: query
      name: only_active
      required: false
      schema:
        default: true
        type: boolean
      style: form
    FilterUpdatedAtLTE:
      description: |
        Returns objects less or equal the specified date.

        This can be combined with updated_at_gte parameter to receive only the selected period.

        *New in version 2.6.0*
      explode: true
      in: query
      name: updated_at_lte
      required: false
      schema:
        format: date-time
        type: string
      style: form
    FilterUpdatedAtGTE:
      description: |
        Returns objects greater or equal the specified date.

        This can be combined with updated_at_lte parameter to receive only the selected period.

        *New in version 2.6.0*
      explode: true
      in: query
      name: updated_at_gte
      required: false
      schema:
        format: date-time
        type: string
      style: form
    Paused:
      description: |
        Only filter paused/unpaused DAGs. If absent or null, it returns paused and unpaused DAGs.

        *New in version 2.6.0*
      explode: true
      in: query
      name: paused
      required: false
      schema:
        type: boolean
      style: form
    FilterXcomKey:
      description: Only filter the XCom records which have the provided key.
      explode: true
      in: query
      name: xcom_key
      required: false
      schema:
        type: string
      style: form
    FilterDAGID:
      description: Returns objects matched by the DAG ID.
      explode: true
      in: query
      name: dag_id
      required: false
      schema:
        type: string
      style: form
    FilterTaskID:
      description: Returns objects matched by the Task ID.
      explode: true
      in: query
      name: task_id
      required: false
      schema:
        type: string
      style: form
    FilterRunID:
      description: Returns objects matched by the Run ID.
      explode: true
      in: query
      name: run_id
      required: false
      schema:
        type: string
      style: form
    FileToken:
      description: |
        The key containing the encrypted path to the file. Encryption and decryption take place only on
        the server. This prevents the client from reading an non-DAG file. This also ensures API
        extensibility, because the format of encrypted data may change.
      explode: false
      in: path
      name: file_token
      required: true
      schema:
        type: string
      style: simple
    UpdateMask:
      description: |
        The fields to update on the resource. If absent or empty, all modifiable fields are updated.
        A comma-separated list of fully qualified names of fields.
      explode: false
      in: query
      name: update_mask
      required: false
      schema:
        items:
          type: string
        type: array
      style: form
    ReturnFields:
      description: |
        List of field for return.
      explode: true
      in: query
      name: fields
      required: false
      schema:
        items:
          type: string
        type: array
      style: form
  requestBodies: {}
  responses:
    BadRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
      description: Client specified an invalid argument.
    Unauthenticated:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
      description: "Request not authenticated due to missing, invalid, authentication\
        \ info."
    PermissionDenied:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
      description: Client does not have sufficient permission.
    NotFound:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
      description: A specified resource is not found.
    MethodNotAllowed:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
      description: Request method is known by the server but is not supported by the
        target resource.
    NotAcceptable:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
      description: A specified Accept header is not allowed.
    AlreadyExists:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
      description: An existing resource conflicts with the request.
    Unknown:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
      description: Unknown server error.
  schemas:
    UserCollectionItem:
      description: |
        A user object.

        *New in version 2.1.0*
      example:
        login_count: 0
        failed_login_count: 6
        created_on: created_on
        last_login: last_login
        roles:
        - name: name
        - name: name
        last_name: last_name
        active: true
        first_name: first_name
        email: email
        changed_on: changed_on
        username: username
      properties:
        first_name:
          description: |
            The user's first name.

            *Changed in version 2.4.0*&#58; The requirement for this to be non-empty was removed.
          type: string
        last_name:
          description: |
            The user's last name.

            *Changed in version 2.4.0*&#58; The requirement for this to be non-empty was removed.
          type: string
        username:
          description: |
            The username.

            *Changed in version 2.2.0*&#58; A minimum character length requirement ('minLength') is added.
          minLength: 1
          type: string
        email:
          description: |
            The user's email.

            *Changed in version 2.2.0*&#58; A minimum character length requirement ('minLength') is added.
          minLength: 1
          type: string
        active:
          description: Whether the user is active
          nullable: true
          readOnly: true
          type: boolean
        last_login:
          description: The last user login
          format: datetime
          nullable: true
          readOnly: true
          type: string
        login_count:
          description: The login count
          nullable: true
          readOnly: true
          type: integer
        failed_login_count:
          description: The number of times the login failed
          nullable: true
          readOnly: true
          type: integer
        roles:
          description: |
            User roles.

            *Changed in version 2.2.0*&#58; Field is no longer read-only.
          items:
            $ref: "#/components/schemas/UserCollectionItem_roles_inner"
          type: array
        created_on:
          description: The date user was created
          format: datetime
          nullable: true
          readOnly: true
          type: string
        changed_on:
          description: The date user was changed
          format: datetime
          nullable: true
          readOnly: true
          type: string
      type: object
    User:
      allOf:
      - $ref: "#/components/schemas/UserCollectionItem"
      - properties:
          password:
            type: string
            writeOnly: true
        type: object
      description: |
        A user object with sensitive data.

        *New in version 2.1.0*
      example:
        login_count: 0
        failed_login_count: 6
        password: password
        created_on: created_on
        last_login: last_login
        roles:
        - name: name
        - name: name
        last_name: last_name
        active: true
        first_name: first_name
        email: email
        changed_on: changed_on
        username: username
      type: object
    UserCollection:
      allOf:
      - properties:
          users:
            items:
              $ref: "#/components/schemas/UserCollectionItem"
            type: array
        type: object
      - $ref: "#/components/schemas/CollectionInfo"
      description: |
        Collection of users.

        *New in version 2.1.0*
      example:
        users:
        - login_count: 0
          failed_login_count: 6
          created_on: created_on
          last_login: last_login
          roles:
          - name: name
          - name: name
          last_name: last_name
          active: true
          first_name: first_name
          email: email
          changed_on: changed_on
          username: username
        - login_count: 0
          failed_login_count: 6
          created_on: created_on
          last_login: last_login
          roles:
          - name: name
          - name: name
          last_name: last_name
          active: true
          first_name: first_name
          email: email
          changed_on: changed_on
          username: username
        total_entries: 1
      type: object
    ConnectionCollectionItem:
      description: |
        Connection collection item.
        The password and extra fields are only available when retrieving a single object due to the sensitivity of this data.
      example:
        conn_type: conn_type
        schema: schema
        connection_id: connection_id
        port: 0
        host: host
        description: description
        login: login
      properties:
        connection_id:
          description: The connection ID.
          type: string
        conn_type:
          description: The connection type.
          type: string
        description:
          description: The description of the connection.
          nullable: true
          type: string
        host:
          description: Host of the connection.
          nullable: true
          type: string
        login:
          description: Login of the connection.
          nullable: true
          type: string
        schema:
          description: Schema of the connection.
          nullable: true
          type: string
        port:
          description: Port of the connection.
          nullable: true
          type: integer
      type: object
    ConnectionCollection:
      allOf:
      - properties:
          connections:
            items:
              $ref: "#/components/schemas/ConnectionCollectionItem"
            type: array
        type: object
      - $ref: "#/components/schemas/CollectionInfo"
      description: |
        Collection of connections.

        *Changed in version 2.1.0*&#58; 'total_entries' field is added.
      example:
        connections:
        - conn_type: conn_type
          schema: schema
          connection_id: connection_id
          port: 0
          host: host
          description: description
          login: login
        - conn_type: conn_type
          schema: schema
          connection_id: connection_id
          port: 0
          host: host
          description: description
          login: login
        total_entries: 6
      type: object
    Connection:
      allOf:
      - $ref: "#/components/schemas/ConnectionCollectionItem"
      - properties:
          password:
            description: Password of the connection.
            format: password
            type: string
            writeOnly: true
          extra:
            description: "Other values that cannot be put into another field, e.g.\
              \ RSA keys."
            nullable: true
            type: string
        type: object
      description: Full representation of the connection.
      example:
        conn_type: conn_type
        schema: schema
        password: password
        connection_id: connection_id
        port: 0
        extra: extra
        host: host
        description: description
        login: login
    ConnectionTest:
      description: |
        Connection test results.

        *New in version 2.2.0*
      example:
        message: message
        status: true
      properties:
        status:
          description: The status of the request.
          type: boolean
        message:
          description: The success or failure message of the request.
          type: string
      type: object
    DAG:
      description: DAG
      example:
        dag_display_name: dag_display_name
        description: description
        owners:
        - owners
        - owners
        fileloc: fileloc
        has_task_concurrency_limits: true
        max_consecutive_failed_dag_runs: 2
        root_dag_id: root_dag_id
        last_pickled: 2000-01-23T04:56:07.000+00:00
        has_import_errors: true
        last_parsed_time: 2000-01-23T04:56:07.000+00:00
        next_dagrun_create_after: 2000-01-23T04:56:07.000+00:00
        dag_id: dag_id
        scheduler_lock: true
        default_view: default_view
        next_dagrun_data_interval_end: 2000-01-23T04:56:07.000+00:00
        next_dagrun_data_interval_start: 2000-01-23T04:56:07.000+00:00
        is_active: true
        last_expired: 2000-01-23T04:56:07.000+00:00
        max_active_runs: 5
        file_token: file_token
        max_active_tasks: 5
        pickle_id: pickle_id
        tags:
        - name: name
        - name: name
        timetable_description: timetable_description
        is_paused: true
        schedule_interval:
          seconds: 6
          __type: __type
          days: 0
          microseconds: 1
        is_subdag: true
        next_dagrun: 2000-01-23T04:56:07.000+00:00
      properties:
        dag_id:
          description: The ID of the DAG.
          readOnly: true
          type: string
        dag_display_name:
          description: |
            Human centric display text for the DAG.

            *New in version 2.9.0*
          readOnly: true
          type: string
        root_dag_id:
          description: "If the DAG is SubDAG then it is the top level DAG identifier.\
            \ Otherwise, null."
          nullable: true
          readOnly: true
          type: string
        is_paused:
          description: Whether the DAG is paused.
          nullable: true
          type: boolean
        is_active:
          description: |
            Whether the DAG is currently seen by the scheduler(s).

            *New in version 2.1.1*

            *Changed in version 2.2.0*&#58; Field is read-only.
          nullable: true
          readOnly: true
          type: boolean
        is_subdag:
          description: Whether the DAG is SubDAG.
          readOnly: true
          type: boolean
        last_parsed_time:
          description: |
            The last time the DAG was parsed.

            *New in version 2.3.0*
          format: date-time
          nullable: true
          readOnly: true
          type: string
        last_pickled:
          description: |
            The last time the DAG was pickled.

            *New in version 2.3.0*
          format: date-time
          nullable: true
          readOnly: true
          type: string
        last_expired:
          description: |
            Time when the DAG last received a refresh signal
            (e.g. the DAG's "refresh" button was clicked in the web UI)

            *New in version 2.3.0*
          format: date-time
          nullable: true
          readOnly: true
          type: string
        scheduler_lock:
          description: |
            Whether (one of) the scheduler is scheduling this DAG at the moment

            *New in version 2.3.0*
          nullable: true
          readOnly: true
          type: boolean
        pickle_id:
          description: |
            Foreign key to the latest pickle_id

            *New in version 2.3.0*
          nullable: true
          readOnly: true
          type: string
        default_view:
          description: |
            Default view of the DAG inside the webserver

            *New in version 2.3.0*
          nullable: true
          readOnly: true
          type: string
        fileloc:
          description: The absolute path to the file.
          readOnly: true
          type: string
        file_token:
          description: |
            The key containing the encrypted path to the file. Encryption and decryption take place only on the server. This prevents the client from reading an non-DAG file. This also ensures API extensibility, because the format of encrypted data may change.
          readOnly: true
          type: string
        owners:
          items:
            type: string
          readOnly: true
          type: array
        description:
          description: |
            User-provided DAG description, which can consist of several sentences or paragraphs that describe DAG contents.
          nullable: true
          readOnly: true
          type: string
        schedule_interval:
          $ref: "#/components/schemas/ScheduleInterval"
        timetable_description:
          description: |
            Timetable/Schedule Interval description.

            *New in version 2.3.0*
          nullable: true
          readOnly: true
          type: string
        tags:
          description: List of tags.
          items:
            $ref: "#/components/schemas/Tag"
          nullable: true
          readOnly: true
          type: array
        max_active_tasks:
          description: |
            Maximum number of active tasks that can be run on the DAG

            *New in version 2.3.0*
          nullable: true
          readOnly: true
          type: integer
        max_active_runs:
          description: |
            Maximum number of active DAG runs for the DAG

            *New in version 2.3.0*
          nullable: true
          readOnly: true
          type: integer
        has_task_concurrency_limits:
          description: |
            Whether the DAG has task concurrency limits

            *New in version 2.3.0*
          nullable: true
          readOnly: true
          type: boolean
        has_import_errors:
          description: |
            Whether the DAG has import errors

            *New in version 2.3.0*
          nullable: true
          readOnly: true
          type: boolean
        next_dagrun:
          description: |
            The logical date of the next dag run.

            *New in version 2.3.0*
          format: date-time
          nullable: true
          readOnly: true
          type: string
        next_dagrun_data_interval_start:
          description: |
            The start of the interval of the next dag run.

            *New in version 2.3.0*
          format: date-time
          nullable: true
          readOnly: true
          type: string
        next_dagrun_data_interval_end:
          description: |
            The end of the interval of the next dag run.

            *New in version 2.3.0*
          format: date-time
          nullable: true
          readOnly: true
          type: string
        next_dagrun_create_after:
          description: |
            Earliest time at which this ``next_dagrun`` can be created.

            *New in version 2.3.0*
          format: date-time
          nullable: true
          readOnly: true
          type: string
        max_consecutive_failed_dag_runs:
          description: |
            (experimental) The maximum number of consecutive DAG failures before DAG is automatically paused.

            *New in version 2.9.0*
          nullable: true
          readOnly: true
          type: integer
      type: object
    DAGCollection:
      allOf:
      - properties:
          dags:
            items:
              $ref: "#/components/schemas/DAG"
            type: array
        type: object
      - $ref: "#/components/schemas/CollectionInfo"
      description: |
        Collection of DAGs.

        *Changed in version 2.1.0*&#58; 'total_entries' field is added.
      example:
        dags:
        - dag_display_name: dag_display_name
          description: description
          owners:
          - owners
          - owners
          fileloc: fileloc
          has_task_concurrency_limits: true
          max_consecutive_failed_dag_runs: 2
          root_dag_id: root_dag_id
          last_pickled: 2000-01-23T04:56:07.000+00:00
          has_import_errors: true
          last_parsed_time: 2000-01-23T04:56:07.000+00:00
          next_dagrun_create_after: 2000-01-23T04:56:07.000+00:00
          dag_id: dag_id
          scheduler_lock: true
          default_view: default_view
          next_dagrun_data_interval_end: 2000-01-23T04:56:07.000+00:00
          next_dagrun_data_interval_start: 2000-01-23T04:56:07.000+00:00
          is_active: true
          last_expired: 2000-01-23T04:56:07.000+00:00
          max_active_runs: 5
          file_token: file_token
          max_active_tasks: 5
          pickle_id: pickle_id
          tags:
          - name: name
          - name: name
          timetable_description: timetable_description
          is_paused: true
          schedule_interval:
            seconds: 6
            __type: __type
            days: 0
            microseconds: 1
          is_subdag: true
          next_dagrun: 2000-01-23T04:56:07.000+00:00
        - dag_display_name: dag_display_name
          description: description
          owners:
          - owners
          - owners
          fileloc: fileloc
          has_task_concurrency_limits: true
          max_consecutive_failed_dag_runs: 2
          root_dag_id: root_dag_id
          last_pickled: 2000-01-23T04:56:07.000+00:00
          has_import_errors: true
          last_parsed_time: 2000-01-23T04:56:07.000+00:00
          next_dagrun_create_after: 2000-01-23T04:56:07.000+00:00
          dag_id: dag_id
          scheduler_lock: true
          default_view: default_view
          next_dagrun_data_interval_end: 2000-01-23T04:56:07.000+00:00
          next_dagrun_data_interval_start: 2000-01-23T04:56:07.000+00:00
          is_active: true
          last_expired: 2000-01-23T04:56:07.000+00:00
          max_active_runs: 5
          file_token: file_token
          max_active_tasks: 5
          pickle_id: pickle_id
          tags:
          - name: name
          - name: name
          timetable_description: timetable_description
          is_paused: true
          schedule_interval:
            seconds: 6
            __type: __type
            days: 0
            microseconds: 1
          is_subdag: true
          next_dagrun: 2000-01-23T04:56:07.000+00:00
        total_entries: 7
      type: object
    DAGRun:
      example:
        end_date: 2000-01-23T04:56:07.000+00:00
        note: note
        execution_date: 2000-01-23T04:56:07.000+00:00
        external_trigger: true
        conf: "{}"
        data_interval_start: 2000-01-23T04:56:07.000+00:00
        run_type: backfill
        data_interval_end: 2000-01-23T04:56:07.000+00:00
        last_scheduling_decision: 2000-01-23T04:56:07.000+00:00
        dag_run_id: dag_run_id
        dag_id: dag_id
        logical_date: 2000-01-23T04:56:07.000+00:00
        state: queued
        start_date: 2000-01-23T04:56:07.000+00:00
      properties:
        dag_run_id:
          description: |
            Run ID.

            The value of this field can be set only when creating the object. If you try to modify the
            field of an existing object, the request fails with an BAD_REQUEST error.

            If not provided, a value will be generated based on execution_date.

            If the specified dag_run_id is in use, the creation request fails with an ALREADY_EXISTS error.

            This together with DAG_ID are a unique key.
          nullable: true
          type: string
        dag_id:
          readOnly: true
          type: string
        logical_date:
          description: |
            The logical date (previously called execution date). This is the time or interval covered by
            this DAG run, according to the DAG definition.

            The value of this field can be set only when creating the object. If you try to modify the
            field of an existing object, the request fails with an BAD_REQUEST error.

            This together with DAG_ID are a unique key.

            *New in version 2.2.0*
          format: date-time
          nullable: true
          type: string
        execution_date:
          deprecated: true
          description: |
            The execution date. This is the same as logical_date, kept for backwards compatibility.
            If both this field and logical_date are provided but with different values, the request
            will fail with an BAD_REQUEST error.

            *Changed in version 2.2.0*&#58; Field becomes nullable.

            *Deprecated since version 2.2.0*&#58; Use 'logical_date' instead.
          format: date-time
          nullable: true
          type: string
        start_date:
          description: |
            The start time. The time when DAG run was actually created.

            *Changed in version 2.1.3*&#58; Field becomes nullable.
          format: date-time
          nullable: true
          readOnly: true
          type: string
        end_date:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        data_interval_start:
          description: |
            The beginning of the interval the DAG run covers.
          format: date-time
          nullable: true
          type: string
        data_interval_end:
          description: |
            The end of the interval the DAG run covers.
          format: date-time
          nullable: true
          type: string
        last_scheduling_decision:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        run_type:
          enum:
          - backfill
          - manual
          - scheduled
          - dataset_triggered
          readOnly: true
          type: string
        state:
          $ref: "#/components/schemas/DagState"
        external_trigger:
          readOnly: true
          type: boolean
        conf:
          description: |
            JSON object describing additional configuration parameters.

            The value of this field can be set only when creating the object. If you try to modify the
            field of an existing object, the request fails with an BAD_REQUEST error.
          type: object
        note:
          description: |
            Contains manually entered notes by the user about the DagRun.

            *New in version 2.5.0*
          nullable: true
          type: string
      type: object
    UpdateDagRunState:
      description: |
        Modify the state of a DAG run.

        *New in version 2.2.0*
      example:
        state: success
      properties:
        state:
          description: The state to set this DagRun
          enum:
          - success
          - failed
          - queued
          type: string
      type: object
    DAGRunCollection:
      allOf:
      - properties:
          dag_runs:
            items:
              $ref: "#/components/schemas/DAGRun"
            type: array
        type: object
      - $ref: "#/components/schemas/CollectionInfo"
      description: |
        Collection of DAG runs.

        *Changed in version 2.1.0*&#58; 'total_entries' field is added.
      example:
        dag_runs:
        - end_date: 2000-01-23T04:56:07.000+00:00
          note: note
          execution_date: 2000-01-23T04:56:07.000+00:00
          external_trigger: true
          conf: "{}"
          data_interval_start: 2000-01-23T04:56:07.000+00:00
          run_type: backfill
          data_interval_end: 2000-01-23T04:56:07.000+00:00
          last_scheduling_decision: 2000-01-23T04:56:07.000+00:00
          dag_run_id: dag_run_id
          dag_id: dag_id
          logical_date: 2000-01-23T04:56:07.000+00:00
          state: queued
          start_date: 2000-01-23T04:56:07.000+00:00
        - end_date: 2000-01-23T04:56:07.000+00:00
          note: note
          execution_date: 2000-01-23T04:56:07.000+00:00
          external_trigger: true
          conf: "{}"
          data_interval_start: 2000-01-23T04:56:07.000+00:00
          run_type: backfill
          data_interval_end: 2000-01-23T04:56:07.000+00:00
          last_scheduling_decision: 2000-01-23T04:56:07.000+00:00
          dag_run_id: dag_run_id
          dag_id: dag_id
          logical_date: 2000-01-23T04:56:07.000+00:00
          state: queued
          start_date: 2000-01-23T04:56:07.000+00:00
        total_entries: 0
      type: object
    DagStatsCollectionSchema:
      allOf:
      - properties:
          dags:
            items:
              $ref: "#/components/schemas/DagStatsCollectionItem"
            type: array
        type: object
      - $ref: "#/components/schemas/CollectionInfo"
      description: |
        Collection of Dag statistics.
      example:
        dags:
        - stats:
          - count: 0
            state: state
          - count: 0
            state: state
          dag_id: dag_id
        - stats:
          - count: 0
            state: state
          - count: 0
            state: state
          dag_id: dag_id
        total_entries: 6
      type: object
    DagStatsCollectionItem:
      description: DagStats entry collection item.
      example:
        stats:
        - count: 0
          state: state
        - count: 0
          state: state
        dag_id: dag_id
      properties:
        dag_id:
          description: The DAG ID.
          type: string
        stats:
          items:
            $ref: "#/components/schemas/DagStatsStateCollectionItem"
          nullable: true
          type: array
      type: object
    DagStatsStateCollectionItem:
      description: DagStatsState entry collection item.
      example:
        count: 0
        state: state
      properties:
        state:
          description: The DAG state.
          type: string
        count:
          description: The DAG state count.
          type: integer
      type: object
    DagWarning:
      example:
        warning_type: warning_type
        dag_id: dag_id
        message: message
        timestamp: timestamp
      properties:
        dag_id:
          description: The dag_id.
          readOnly: true
          type: string
        warning_type:
          description: The warning type for the dag warning.
          readOnly: true
          type: string
        message:
          description: The message for the dag warning.
          readOnly: true
          type: string
        timestamp:
          description: The time when this warning was logged.
          format: datetime
          readOnly: true
          type: string
      type: object
    DagWarningCollection:
      allOf:
      - properties:
          dag_warnings:
            items:
              $ref: "#/components/schemas/DagWarning"
            type: array
        type: object
      - $ref: "#/components/schemas/CollectionInfo"
      description: |
        Collection of DAG warnings.
      example:
        dag_warnings:
        - warning_type: warning_type
          dag_id: dag_id
          message: message
          timestamp: timestamp
        - warning_type: warning_type
          dag_id: dag_id
          message: message
          timestamp: timestamp
        total_entries: 0
      type: object
    SetDagRunNote:
      example:
        note: note
      properties:
        note:
          description: Custom notes left by users for this Dag Run.
          type: string
      type: object
    EventLog:
      description: Log of user operations via CLI or Web UI.
      example:
        owner: owner
        run_id: run_id
        execution_date: 2000-01-23T04:56:07.000+00:00
        extra: extra
        event_log_id: 0
        map_index: 6
        task_id: task_id
        try_number: 1
        dag_id: dag_id
        event: event
        when: 2000-01-23T04:56:07.000+00:00
      properties:
        event_log_id:
          description: The event log ID
          readOnly: true
          type: integer
        when:
          description: The time when these events happened.
          format: date-time
          readOnly: true
          type: string
        dag_id:
          description: The DAG ID
          nullable: true
          readOnly: true
          type: string
        task_id:
          description: The Task ID
          nullable: true
          readOnly: true
          type: string
        run_id:
          description: The DAG Run ID
          nullable: true
          readOnly: true
          type: string
        map_index:
          description: The Map Index
          nullable: true
          readOnly: true
          type: integer
        try_number:
          description: The Try Number
          nullable: true
          readOnly: true
          type: integer
        event:
          description: A key describing the type of event.
          readOnly: true
          type: string
        execution_date:
          description: |
            When the event was dispatched for an object having execution_date, the value of this field.
          format: date-time
          nullable: true
          readOnly: true
          type: string
        owner:
          description: Name of the user who triggered these events a.
          nullable: true
          readOnly: true
          type: string
        extra:
          description: |
            Other information that was not included in the other fields, e.g. the complete CLI command.
          nullable: true
          readOnly: true
          type: string
      type: object
    EventLogCollection:
      allOf:
      - properties:
          event_logs:
            items:
              $ref: "#/components/schemas/EventLog"
            type: array
        type: object
      - $ref: "#/components/schemas/CollectionInfo"
      description: |
        Collection of event logs.

        *Changed in version 2.1.0*&#58; 'total_entries' field is added.
        *Changed in version 2.10.0*&#58; 'try_number' and 'map_index' fields are added.
      example:
        event_logs:
        - owner: owner
          run_id: run_id
          execution_date: 2000-01-23T04:56:07.000+00:00
          extra: extra
          event_log_id: 0
          map_index: 6
          task_id: task_id
          try_number: 1
          dag_id: dag_id
          event: event
          when: 2000-01-23T04:56:07.000+00:00
        - owner: owner
          run_id: run_id
          execution_date: 2000-01-23T04:56:07.000+00:00
          extra: extra
          event_log_id: 0
          map_index: 6
          task_id: task_id
          try_number: 1
          dag_id: dag_id
          event: event
          when: 2000-01-23T04:56:07.000+00:00
        total_entries: 5
      type: object
    ImportError:
      example:
        filename: filename
        stack_trace: stack_trace
        import_error_id: 0
        timestamp: timestamp
      properties:
        import_error_id:
          description: The import error ID.
          readOnly: true
          type: integer
        timestamp:
          description: The time when this error was created.
          format: datetime
          readOnly: true
          type: string
        filename:
          description: The filename
          readOnly: true
          type: string
        stack_trace:
          description: The full stackstrace.
          readOnly: true
          type: string
      type: object
    ImportErrorCollection:
      allOf:
      - properties:
          import_errors:
            items:
              $ref: "#/components/schemas/ImportError"
            type: array
        type: object
      - $ref: "#/components/schemas/CollectionInfo"
      description: |
        Collection of import errors.

        *Changed in version 2.1.0*&#58; 'total_entries' field is added.
      example:
        import_errors:
        - filename: filename
          stack_trace: stack_trace
          import_error_id: 0
          timestamp: timestamp
        - filename: filename
          stack_trace: stack_trace
          import_error_id: 0
          timestamp: timestamp
        total_entries: 6
      type: object
    HealthInfo:
      description: Instance status information.
      example:
        scheduler:
          latest_scheduler_heartbeat: latest_scheduler_heartbeat
          status: null
        triggerer:
          latest_triggerer_heartbeat: latest_triggerer_heartbeat
          status: null
        metadatabase:
          status: healthy
        dag_processor:
          latest_dag_processor_heartbeat: latest_dag_processor_heartbeat
          status: null
      properties:
        metadatabase:
          $ref: "#/components/schemas/MetadatabaseStatus"
        scheduler:
          $ref: "#/components/schemas/SchedulerStatus"
        triggerer:
          $ref: "#/components/schemas/TriggererStatus"
        dag_processor:
          $ref: "#/components/schemas/DagProcessorStatus"
      type: object
    MetadatabaseStatus:
      description: The status of the metadatabase.
      example:
        status: healthy
      properties:
        status:
          $ref: "#/components/schemas/HealthStatus"
      type: object
    SchedulerStatus:
      description: The status and the latest scheduler heartbeat.
      example:
        latest_scheduler_heartbeat: latest_scheduler_heartbeat
        status: null
      properties:
        status:
          $ref: "#/components/schemas/HealthStatus"
        latest_scheduler_heartbeat:
          description: The time the scheduler last did a heartbeat.
          format: datetime
          nullable: true
          readOnly: true
          type: string
      type: object
    TriggererStatus:
      description: |
        The status and the latest triggerer heartbeat.

        *New in version 2.6.2*
      example:
        latest_triggerer_heartbeat: latest_triggerer_heartbeat
        status: null
      properties:
        status:
          $ref: "#/components/schemas/HealthStatus"
        latest_triggerer_heartbeat:
          description: The time the triggerer last did a heartbeat.
          format: datetime
          nullable: true
          readOnly: true
          type: string
      type: object
    DagProcessorStatus:
      description: |
        The status and the latest dag processor heartbeat.

        *New in version 2.6.3*
      example:
        latest_dag_processor_heartbeat: latest_dag_processor_heartbeat
        status: null
      properties:
        status:
          $ref: "#/components/schemas/HealthStatus"
        latest_dag_processor_heartbeat:
          description: The time the dag processor last did a heartbeat.
          format: datetime
          nullable: true
          readOnly: true
          type: string
      type: object
    Pool:
      description: The pool
      example:
        running_slots: 1
        queued_slots: 5
        open_slots: 5
        slots: 0
        scheduled_slots: 2
        name: name
        description: description
        deferred_slots: 7
        include_deferred: true
        occupied_slots: 6
      properties:
        name:
          description: The name of pool.
          type: string
        slots:
          description: |
            The maximum number of slots that can be assigned to tasks. One job may occupy one or more slots.
          type: integer
        occupied_slots:
          description: The number of slots used by running/queued tasks at the moment.
            May include deferred tasks if 'include_deferred' is set to true.
          readOnly: true
          type: integer
        running_slots:
          description: The number of slots used by running tasks at the moment.
          readOnly: true
          type: integer
        queued_slots:
          description: The number of slots used by queued tasks at the moment.
          readOnly: true
          type: integer
        open_slots:
          description: The number of free slots at the moment.
          readOnly: true
          type: integer
        scheduled_slots:
          description: The number of slots used by scheduled tasks at the moment.
          readOnly: true
          type: integer
        deferred_slots:
          description: |
            The number of slots used by deferred tasks at the moment. Relevant if 'include_deferred' is set to true.

            *New in version 2.7.0*
          readOnly: true
          type: integer
        description:
          description: |
            The description of the pool.

            *New in version 2.3.0*
          nullable: true
          type: string
        include_deferred:
          description: |
            If set to true, deferred tasks are considered when calculating open pool slots.

            *New in version 2.7.0*
          type: boolean
      type: object
    PoolCollection:
      allOf:
      - properties:
          pools:
            items:
              $ref: "#/components/schemas/Pool"
            type: array
        type: object
      - $ref: "#/components/schemas/CollectionInfo"
      description: |
        Collection of pools.

        *Changed in version 2.1.0*&#58; 'total_entries' field is added.
      example:
        pools:
        - running_slots: 1
          queued_slots: 5
          open_slots: 5
          slots: 0
          scheduled_slots: 2
          name: name
          description: description
          deferred_slots: 7
          include_deferred: true
          occupied_slots: 6
        - running_slots: 1
          queued_slots: 5
          open_slots: 5
          slots: 0
          scheduled_slots: 2
          name: name
          description: description
          deferred_slots: 7
          include_deferred: true
          occupied_slots: 6
        total_entries: 9
      type: object
    Provider:
      description: |
        The provider

        *New in version 2.1.0*
      example:
        package_name: package_name
        description: description
        version: version
      properties:
        package_name:
          description: The package name of the provider.
          type: string
        description:
          description: The description of the provider.
          type: string
        version:
          description: The version of the provider.
          type: string
      type: object
    ProviderCollection:
      description: |
        Collection of providers.

        *New in version 2.1.0*
      properties:
        providers:
          items:
            $ref: "#/components/schemas/Provider"
          type: array
      type: object
    SLAMiss:
      example:
        notification_sent: true
        email_sent: true
        execution_date: execution_date
        description: description
        task_id: task_id
        dag_id: dag_id
        timestamp: timestamp
      nullable: true
      properties:
        task_id:
          description: The task ID.
          readOnly: true
          type: string
        dag_id:
          description: The DAG ID.
          type: string
        execution_date:
          format: datetime
          type: string
        email_sent:
          type: boolean
        timestamp:
          format: datetime
          type: string
        description:
          nullable: true
          type: string
        notification_sent:
          type: boolean
      type: object
    Trigger:
      example:
        classpath: classpath
        kwargs: kwargs
        id: 9
        created_date: created_date
        triggerer_id: 3
      nullable: true
      properties:
        id:
          type: integer
        classpath:
          type: string
        kwargs:
          type: string
        created_date:
          format: datetime
          type: string
        triggerer_id:
          nullable: true
          type: integer
      type: object
    TaskFailedDependency:
      example:
        reason: reason
        name: name
      properties:
        name:
          type: string
        reason:
          type: string
      type: object
    TaskInstanceDependencyCollection:
      example:
        dependencies:
        - reason: reason
          name: name
        - reason: reason
          name: name
      properties:
        dependencies:
          items:
            $ref: "#/components/schemas/TaskFailedDependency"
          type: array
      type: object
    Job:
      example:
        job_type: job_type
        end_date: end_date
        unixname: unixname
        latest_heartbeat: latest_heartbeat
        hostname: hostname
        id: 2
        dag_id: dag_id
        state: state
        executor_class: executor_class
        start_date: start_date
      nullable: true
      properties:
        id:
          type: integer
        dag_id:
          nullable: true
          type: string
        state:
          nullable: true
          type: string
        job_type:
          nullable: true
          type: string
        start_date:
          format: datetime
          nullable: true
          type: string
        end_date:
          format: datetime
          nullable: true
          type: string
        latest_heartbeat:
          format: datetime
          nullable: true
          type: string
        executor_class:
          nullable: true
          type: string
        hostname:
          nullable: true
          type: string
        unixname:
          nullable: true
          type: string
      type: object
    TaskInstance:
      example:
        end_date: end_date
        unixname: unixname
        note: note
        rendered_fields: "{}"
        task_display_name: task_display_name
        task_id: task_id
        pid: 7
        operator: operator
        rendered_map_index: rendered_map_index
        sla_miss:
          notification_sent: true
          email_sent: true
          execution_date: execution_date
          description: description
          task_id: task_id
          dag_id: dag_id
          timestamp: timestamp
        duration: 0.8008281904610115
        hostname: hostname
        executor: executor
        dag_id: dag_id
        state: null
        priority_weight: 2
        start_date: start_date
        queued_when: queued_when
        triggerer_job:
          job_type: job_type
          end_date: end_date
          unixname: unixname
          latest_heartbeat: latest_heartbeat
          hostname: hostname
          id: 2
          dag_id: dag_id
          state: state
          executor_class: executor_class
          start_date: start_date
        execution_date: execution_date
        pool_slots: 5
        pool: pool
        map_index: 1
        max_tries: 5
        trigger:
          classpath: classpath
          kwargs: kwargs
          id: 9
          created_date: created_date
          triggerer_id: 3
        executor_config: executor_config
        dag_run_id: dag_run_id
        try_number: 6
        queue: queue
      properties:
        task_id:
          type: string
        task_display_name:
          description: |
            Human centric display text for the task.

            *New in version 2.9.0*
          type: string
        dag_id:
          type: string
        dag_run_id:
          description: |
            The DagRun ID for this task instance

            *New in version 2.3.0*
          type: string
        execution_date:
          format: datetime
          type: string
        start_date:
          format: datetime
          nullable: true
          type: string
        end_date:
          format: datetime
          nullable: true
          type: string
        duration:
          nullable: true
          type: number
        state:
          $ref: "#/components/schemas/TaskState"
        try_number:
          type: integer
        map_index:
          type: integer
        max_tries:
          type: integer
        hostname:
          type: string
        unixname:
          type: string
        pool:
          type: string
        pool_slots:
          type: integer
        queue:
          nullable: true
          type: string
        priority_weight:
          nullable: true
          type: integer
        operator:
          description: |
            *Changed in version 2.1.1*&#58; Field becomes nullable.
          nullable: true
          type: string
        queued_when:
          description: |
            The datetime that the task enter the state QUEUE, also known as queue_at
          nullable: true
          type: string
        pid:
          nullable: true
          type: integer
        executor:
          description: |
            Executor the task is configured to run on or None (which indicates the default executor)

            *New in version 2.10.0*
          nullable: true
          type: string
        executor_config:
          type: string
        sla_miss:
          $ref: "#/components/schemas/SLAMiss"
        rendered_map_index:
          description: |
            Rendered name of an expanded task instance, if the task is mapped.

            *New in version 2.9.0*
          nullable: true
          type: string
        rendered_fields:
          description: |
            JSON object describing rendered fields.

            *New in version 2.3.0*
          type: object
        trigger:
          $ref: "#/components/schemas/Trigger"
        triggerer_job:
          $ref: "#/components/schemas/Job"
        note:
          description: |
            Contains manually entered notes by the user about the TaskInstance.

            *New in version 2.5.0*
          nullable: true
          type: string
      type: object
    TaskInstanceCollection:
      allOf:
      - properties:
          task_instances:
            items:
              $ref: "#/components/schemas/TaskInstance"
            type: array
        type: object
      - $ref: "#/components/schemas/CollectionInfo"
      description: |
        Collection of task instances.

        *Changed in version 2.1.0*&#58; 'total_entries' field is added.
      example:
        task_instances:
        - end_date: end_date
          unixname: unixname
          note: note
          rendered_fields: "{}"
          task_display_name: task_display_name
          task_id: task_id
          pid: 7
          operator: operator
          rendered_map_index: rendered_map_index
          sla_miss:
            notification_sent: true
            email_sent: true
            execution_date: execution_date
            description: description
            task_id: task_id
            dag_id: dag_id
            timestamp: timestamp
          duration: 0.8008281904610115
          hostname: hostname
          executor: executor
          dag_id: dag_id
          state: null
          priority_weight: 2
          start_date: start_date
          queued_when: queued_when
          triggerer_job:
            job_type: job_type
            end_date: end_date
            unixname: unixname
            latest_heartbeat: latest_heartbeat
            hostname: hostname
            id: 2
            dag_id: dag_id
            state: state
            executor_class: executor_class
            start_date: start_date
          execution_date: execution_date
          pool_slots: 5
          pool: pool
          map_index: 1
          max_tries: 5
          trigger:
            classpath: classpath
            kwargs: kwargs
            id: 9
            created_date: created_date
            triggerer_id: 3
          executor_config: executor_config
          dag_run_id: dag_run_id
          try_number: 6
          queue: queue
        - end_date: end_date
          unixname: unixname
          note: note
          rendered_fields: "{}"
          task_display_name: task_display_name
          task_id: task_id
          pid: 7
          operator: operator
          rendered_map_index: rendered_map_index
          sla_miss:
            notification_sent: true
            email_sent: true
            execution_date: execution_date
            description: description
            task_id: task_id
            dag_id: dag_id
            timestamp: timestamp
          duration: 0.8008281904610115
          hostname: hostname
          executor: executor
          dag_id: dag_id
          state: null
          priority_weight: 2
          start_date: start_date
          queued_when: queued_when
          triggerer_job:
            job_type: job_type
            end_date: end_date
            unixname: unixname
            latest_heartbeat: latest_heartbeat
            hostname: hostname
            id: 2
            dag_id: dag_id
            state: state
            executor_class: executor_class
            start_date: start_date
          execution_date: execution_date
          pool_slots: 5
          pool: pool
          map_index: 1
          max_tries: 5
          trigger:
            classpath: classpath
            kwargs: kwargs
            id: 9
            created_date: created_date
            triggerer_id: 3
          executor_config: executor_config
          dag_run_id: dag_run_id
          try_number: 6
          queue: queue
        total_entries: 0
      type: object
    TaskInstanceHistory:
      example:
        end_date: end_date
        unixname: unixname
        pool_slots: 5
        task_display_name: task_display_name
        pool: pool
        map_index: 1
        task_id: task_id
        pid: 7
        max_tries: 5
        operator: operator
        duration: 0.8008281904610115
        hostname: hostname
        executor_config: executor_config
        executor: executor
        dag_run_id: dag_run_id
        try_number: 6
        dag_id: dag_id
        state: null
        priority_weight: 2
        queue: queue
        start_date: start_date
        queued_when: queued_when
      properties:
        task_id:
          type: string
        task_display_name:
          description: |
            Human centric display text for the task.

            *New in version 2.9.0*
          type: string
        dag_id:
          type: string
        dag_run_id:
          description: |
            The DagRun ID for this task instance

            *New in version 2.3.0*
          type: string
        start_date:
          format: datetime
          nullable: true
          type: string
        end_date:
          format: datetime
          nullable: true
          type: string
        duration:
          nullable: true
          type: number
        state:
          $ref: "#/components/schemas/TaskState"
        try_number:
          type: integer
        map_index:
          type: integer
        max_tries:
          type: integer
        hostname:
          type: string
        unixname:
          type: string
        pool:
          type: string
        pool_slots:
          type: integer
        queue:
          nullable: true
          type: string
        priority_weight:
          nullable: true
          type: integer
        operator:
          description: |
            *Changed in version 2.1.1*&#58; Field becomes nullable.
          nullable: true
          type: string
        queued_when:
          description: |
            The datetime that the task enter the state QUEUE, also known as queue_at
          nullable: true
          type: string
        pid:
          nullable: true
          type: integer
        executor:
          description: |
            Executor the task is configured to run on or None (which indicates the default executor)

            *New in version 2.10.0*
          nullable: true
          type: string
        executor_config:
          type: string
      type: object
    TaskInstanceHistoryCollection:
      allOf:
      - properties:
          task_instances_history:
            items:
              $ref: "#/components/schemas/TaskInstanceHistory"
            type: array
        type: object
      - $ref: "#/components/schemas/CollectionInfo"
      description: |
        Collection of task instances .

        *Changed in version 2.1.0*&#58; 'total_entries' field is added.
      example:
        total_entries: 0
        task_instances_history:
        - end_date: end_date
          unixname: unixname
          pool_slots: 5
          task_display_name: task_display_name
          pool: pool
          map_index: 1
          task_id: task_id
          pid: 7
          max_tries: 5
          operator: operator
          duration: 0.8008281904610115
          hostname: hostname
          executor_config: executor_config
          executor: executor
          dag_run_id: dag_run_id
          try_number: 6
          dag_id: dag_id
          state: null
          priority_weight: 2
          queue: queue
          start_date: start_date
          queued_when: queued_when
        - end_date: end_date
          unixname: unixname
          pool_slots: 5
          task_display_name: task_display_name
          pool: pool
          map_index: 1
          task_id: task_id
          pid: 7
          max_tries: 5
          operator: operator
          duration: 0.8008281904610115
          hostname: hostname
          executor_config: executor_config
          executor: executor
          dag_run_id: dag_run_id
          try_number: 6
          dag_id: dag_id
          state: null
          priority_weight: 2
          queue: queue
          start_date: start_date
          queued_when: queued_when
      type: object
    TaskInstanceReference:
      example:
        execution_date: execution_date
        dag_run_id: dag_run_id
        task_id: task_id
        dag_id: dag_id
      properties:
        task_id:
          description: The task ID.
          readOnly: true
          type: string
        dag_id:
          description: The DAG ID.
          readOnly: true
          type: string
        execution_date:
          format: datetime
          readOnly: true
          type: string
        dag_run_id:
          description: The DAG run ID.
          readOnly: true
          type: string
      type: object
    TaskInstanceReferenceCollection:
      example:
        task_instances:
        - execution_date: execution_date
          dag_run_id: dag_run_id
          task_id: task_id
          dag_id: dag_id
        - execution_date: execution_date
          dag_run_id: dag_run_id
          task_id: task_id
          dag_id: dag_id
      properties:
        task_instances:
          items:
            $ref: "#/components/schemas/TaskInstanceReference"
          type: array
      type: object
    VariableCollectionItem:
      description: |-
        XCom entry collection item.
        The value field are only available when retrieving a single object due to the sensitivity of this data.
      example:
        description: description
        key: key
      properties:
        key:
          type: string
        description:
          description: |
            The description of the variable.

            *New in version 2.4.0*
          nullable: true
          type: string
      type: object
    VariableCollection:
      allOf:
      - properties:
          variables:
            items:
              $ref: "#/components/schemas/VariableCollectionItem"
            type: array
        type: object
      - $ref: "#/components/schemas/CollectionInfo"
      description: |
        Collection of variables.

        *Changed in version 2.1.0*&#58; 'total_entries' field is added.
      example:
        variables:
        - description: description
          key: key
        - description: description
          key: key
        total_entries: 0
      type: object
    Variable:
      allOf:
      - $ref: "#/components/schemas/VariableCollectionItem"
      - properties:
          value:
            type: string
        type: object
      description: Full representation of Variable
      example:
        description: description
        value: value
        key: key
    XComCollectionItem:
      description: |
        XCom entry collection item.

        The value field is only available when reading a single object due to the size of the value.
      example:
        execution_date: execution_date
        map_index: 0
        task_id: task_id
        dag_id: dag_id
        key: key
        timestamp: timestamp
      properties:
        key:
          type: string
        timestamp:
          format: datetime
          type: string
        execution_date:
          format: datetime
          type: string
        map_index:
          type: integer
        task_id:
          type: string
        dag_id:
          type: string
      type: object
    XComCollection:
      allOf:
      - properties:
          xcom_entries:
            items:
              $ref: "#/components/schemas/XComCollectionItem"
            type: array
        type: object
      - $ref: "#/components/schemas/CollectionInfo"
      description: |
        Collection of XCom entries.

        *Changed in version 2.1.0*&#58; 'total_entries' field is added.
      example:
        xcom_entries:
        - execution_date: execution_date
          map_index: 0
          task_id: task_id
          dag_id: dag_id
          key: key
          timestamp: timestamp
        - execution_date: execution_date
          map_index: 0
          task_id: task_id
          dag_id: dag_id
          key: key
          timestamp: timestamp
        total_entries: 6
      type: object
    XCom:
      allOf:
      - $ref: "#/components/schemas/XComCollectionItem"
      - properties:
          value:
            description: "The value(s),"
            example: null
        type: object
      description: Full representations of XCom entry.
      example:
        execution_date: execution_date
        map_index: 0
        task_id: task_id
        dag_id: dag_id
        value: ""
        key: key
        timestamp: timestamp
    DAGDetail:
      allOf:
      - $ref: "#/components/schemas/DAG"
      - properties:
          timezone:
            $ref: "#/components/schemas/Timezone"
          catchup:
            nullable: true
            readOnly: true
            type: boolean
          orientation:
            nullable: true
            readOnly: true
            type: string
          concurrency:
            nullable: true
            readOnly: true
            type: number
          start_date:
            description: |
              The DAG's start date.

              *Changed in version 2.0.1*&#58; Field becomes nullable.
            format: date-time
            nullable: true
            readOnly: true
            type: string
          dag_run_timeout:
            $ref: "#/components/schemas/TimeDelta"
          dataset_expression:
            $ref: "#/components/schemas/DAGDetail_allOf_dataset_expression"
          doc_md:
            nullable: true
            readOnly: true
            type: string
          default_view:
            nullable: true
            readOnly: true
            type: string
          params:
            $ref: "#/components/schemas/DAGDetail_allOf_params"
          end_date:
            description: |
              The DAG's end date.

              *New in version 2.3.0*.
            format: date-time
            nullable: true
            readOnly: true
            type: string
          is_paused_upon_creation:
            description: |
              Whether the DAG is paused upon creation.

              *New in version 2.3.0*
            nullable: true
            readOnly: true
            type: boolean
          last_parsed:
            description: |
              The last time the DAG was parsed.

              *New in version 2.3.0*
            format: date-time
            nullable: true
            readOnly: true
            type: string
          template_search_path:
            description: |
              The template search path.

              *New in version 2.3.0*
            items:
              type: string
            nullable: true
            type: array
          render_template_as_native_obj:
            description: |
              Whether to render templates as native Python objects.

              *New in version 2.3.0*
            nullable: true
            readOnly: true
            type: boolean
        type: object
      description: |
        DAG details.

        For details see:
        [airflow.models.dag.DAG](https://airflow.apache.org/docs/apache-airflow/stable/_api/airflow/models/dag/index.html#airflow.models.dag.DAG)
      example:
        dag_display_name: dag_display_name
        end_date: 2000-01-23T04:56:07.000+00:00
        timezone: null
        description: description
        dag_run_timeout:
          seconds: 6
          __type: __type
          days: 0
          microseconds: 1
        owners:
        - owners
        - owners
        fileloc: fileloc
        render_template_as_native_obj: true
        has_task_concurrency_limits: true
        max_consecutive_failed_dag_runs: 1
        doc_md: doc_md
        root_dag_id: root_dag_id
        last_pickled: 2000-01-23T04:56:07.000+00:00
        has_import_errors: true
        last_parsed_time: 2000-01-23T04:56:07.000+00:00
        next_dagrun_create_after: 2000-01-23T04:56:07.000+00:00
        dag_id: dag_id
        scheduler_lock: true
        default_view: default_view
        next_dagrun_data_interval_end: 2000-01-23T04:56:07.000+00:00
        start_date: 2000-01-23T04:56:07.000+00:00
        next_dagrun_data_interval_start: 2000-01-23T04:56:07.000+00:00
        orientation: orientation
        is_active: true
        last_expired: 2000-01-23T04:56:07.000+00:00
        max_active_runs: 6
        is_paused_upon_creation: true
        file_token: file_token
        last_parsed: 2000-01-23T04:56:07.000+00:00
        max_active_tasks: 0
        pickle_id: pickle_id
        params: null
        tags:
        - name: name
        - name: name
        concurrency: 5.962133916683182
        timetable_description: timetable_description
        is_paused: true
        catchup: true
        template_search_path:
        - template_search_path
        - template_search_path
        schedule_interval:
          seconds: 6
          __type: __type
          days: 0
          microseconds: 1
        is_subdag: true
        next_dagrun: 2000-01-23T04:56:07.000+00:00
        dataset_expression: null
    ExtraLink:
      description: Additional links containing additional information about the task.
      example:
        name: name
        href: href
        class_ref:
          class_name: class_name
          module_path: module_path
      properties:
        class_ref:
          $ref: "#/components/schemas/ClassReference"
        name:
          readOnly: true
          type: string
        href:
          readOnly: true
          type: string
      type: object
    ExtraLinkCollection:
      description: The collection of extra links.
      example:
        extra_links:
        - name: name
          href: href
          class_ref:
            class_name: class_name
            module_path: module_path
        - name: name
          href: href
          class_ref:
            class_name: class_name
            module_path: module_path
      properties:
        extra_links:
          items:
            $ref: "#/components/schemas/ExtraLink"
          type: array
      type: object
    Task:
      description: |
        For details see:
        [airflow.models.baseoperator.BaseOperator](https://airflow.apache.org/docs/apache-airflow/stable/_api/airflow/models/baseoperator/index.html#airflow.models.baseoperator.BaseOperator)
      example:
        end_date: 2000-01-23T04:56:07.000+00:00
        ui_fgcolor: ui_fgcolor
        trigger_rule: all_success
        task_display_name: task_display_name
        task_id: task_id
        retry_exponential_backoff: true
        doc_md: doc_md
        template_fields:
        - template_fields
        - template_fields
        retry_delay:
          seconds: 6
          __type: __type
          days: 0
          microseconds: 1
        executor: executor
        is_mapped: true
        priority_weight: 1.4658129805029452
        execution_timeout:
          seconds: 6
          __type: __type
          days: 0
          microseconds: 1
        start_date: 2000-01-23T04:56:07.000+00:00
        owner: owner
        extra_links:
        - class_ref:
            class_name: class_name
            module_path: module_path
        - class_ref:
            class_name: class_name
            module_path: module_path
        depends_on_past: true
        ui_color: ui_color
        pool_slots: 6.027456183070403
        pool: pool
        downstream_task_ids:
        - downstream_task_ids
        - downstream_task_ids
        sub_dag:
          dag_display_name: dag_display_name
          description: description
          owners:
          - owners
          - owners
          fileloc: fileloc
          has_task_concurrency_limits: true
          max_consecutive_failed_dag_runs: 2
          root_dag_id: root_dag_id
          last_pickled: 2000-01-23T04:56:07.000+00:00
          has_import_errors: true
          last_parsed_time: 2000-01-23T04:56:07.000+00:00
          next_dagrun_create_after: 2000-01-23T04:56:07.000+00:00
          dag_id: dag_id
          scheduler_lock: true
          default_view: default_view
          next_dagrun_data_interval_end: 2000-01-23T04:56:07.000+00:00
          next_dagrun_data_interval_start: 2000-01-23T04:56:07.000+00:00
          is_active: true
          last_expired: 2000-01-23T04:56:07.000+00:00
          max_active_runs: 5
          file_token: file_token
          max_active_tasks: 5
          pickle_id: pickle_id
          tags:
          - name: name
          - name: name
          timetable_description: timetable_description
          is_paused: true
          schedule_interval:
            seconds: 6
            __type: __type
            days: 0
            microseconds: 1
          is_subdag: true
          next_dagrun: 2000-01-23T04:56:07.000+00:00
        retries: 0.8008281904610115
        wait_for_downstream: true
        class_ref:
          class_name: class_name
          module_path: module_path
        queue: queue
        weight_rule: downstream
      properties:
        class_ref:
          $ref: "#/components/schemas/ClassReference"
        task_id:
          readOnly: true
          type: string
        task_display_name:
          readOnly: true
          type: string
        owner:
          readOnly: true
          type: string
        start_date:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        end_date:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        trigger_rule:
          $ref: "#/components/schemas/TriggerRule"
        extra_links:
          items:
            $ref: "#/components/schemas/Task_extra_links_inner"
          readOnly: true
          type: array
        depends_on_past:
          readOnly: true
          type: boolean
        is_mapped:
          readOnly: true
          type: boolean
        wait_for_downstream:
          readOnly: true
          type: boolean
        retries:
          readOnly: true
          type: number
        queue:
          nullable: true
          readOnly: true
          type: string
        executor:
          nullable: true
          readOnly: true
          type: string
        pool:
          readOnly: true
          type: string
        pool_slots:
          readOnly: true
          type: number
        execution_timeout:
          $ref: "#/components/schemas/TimeDelta"
        retry_delay:
          $ref: "#/components/schemas/TimeDelta"
        retry_exponential_backoff:
          readOnly: true
          type: boolean
        priority_weight:
          readOnly: true
          type: number
        weight_rule:
          $ref: "#/components/schemas/WeightRule"
        ui_color:
          description: Color in hexadecimal notation.
          pattern: "^#[a-fA-F0-9]{3,6}$"
          type: string
        ui_fgcolor:
          description: Color in hexadecimal notation.
          pattern: "^#[a-fA-F0-9]{3,6}$"
          type: string
        template_fields:
          items:
            type: string
          readOnly: true
          type: array
        sub_dag:
          $ref: "#/components/schemas/DAG"
        downstream_task_ids:
          items:
            type: string
          readOnly: true
          type: array
        doc_md:
          description: |
            Task documentation in markdown.

            *New in version 2.10.0*
          nullable: true
          readOnly: true
          type: string
      type: object
    TaskCollection:
      description: Collection of tasks.
      example:
        tasks:
        - end_date: 2000-01-23T04:56:07.000+00:00
          ui_fgcolor: ui_fgcolor
          trigger_rule: all_success
          task_display_name: task_display_name
          task_id: task_id
          retry_exponential_backoff: true
          doc_md: doc_md
          template_fields:
          - template_fields
          - template_fields
          retry_delay:
            seconds: 6
            __type: __type
            days: 0
            microseconds: 1
          executor: executor
          is_mapped: true
          priority_weight: 1.4658129805029452
          execution_timeout:
            seconds: 6
            __type: __type
            days: 0
            microseconds: 1
          start_date: 2000-01-23T04:56:07.000+00:00
          owner: owner
          extra_links:
          - class_ref:
              class_name: class_name
              module_path: module_path
          - class_ref:
              class_name: class_name
              module_path: module_path
          depends_on_past: true
          ui_color: ui_color
          pool_slots: 6.027456183070403
          pool: pool
          downstream_task_ids:
          - downstream_task_ids
          - downstream_task_ids
          sub_dag:
            dag_display_name: dag_display_name
            description: description
            owners:
            - owners
            - owners
            fileloc: fileloc
            has_task_concurrency_limits: true
            max_consecutive_failed_dag_runs: 2
            root_dag_id: root_dag_id
            last_pickled: 2000-01-23T04:56:07.000+00:00
            has_import_errors: true
            last_parsed_time: 2000-01-23T04:56:07.000+00:00
            next_dagrun_create_after: 2000-01-23T04:56:07.000+00:00
            dag_id: dag_id
            scheduler_lock: true
            default_view: default_view
            next_dagrun_data_interval_end: 2000-01-23T04:56:07.000+00:00
            next_dagrun_data_interval_start: 2000-01-23T04:56:07.000+00:00
            is_active: true
            last_expired: 2000-01-23T04:56:07.000+00:00
            max_active_runs: 5
            file_token: file_token
            max_active_tasks: 5
            pickle_id: pickle_id
            tags:
            - name: name
            - name: name
            timetable_description: timetable_description
            is_paused: true
            schedule_interval:
              seconds: 6
              __type: __type
              days: 0
              microseconds: 1
            is_subdag: true
            next_dagrun: 2000-01-23T04:56:07.000+00:00
          retries: 0.8008281904610115
          wait_for_downstream: true
          class_ref:
            class_name: class_name
            module_path: module_path
          queue: queue
          weight_rule: downstream
        - end_date: 2000-01-23T04:56:07.000+00:00
          ui_fgcolor: ui_fgcolor
          trigger_rule: all_success
          task_display_name: task_display_name
          task_id: task_id
          retry_exponential_backoff: true
          doc_md: doc_md
          template_fields:
          - template_fields
          - template_fields
          retry_delay:
            seconds: 6
            __type: __type
            days: 0
            microseconds: 1
          executor: executor
          is_mapped: true
          priority_weight: 1.4658129805029452
          execution_timeout:
            seconds: 6
            __type: __type
            days: 0
            microseconds: 1
          start_date: 2000-01-23T04:56:07.000+00:00
          owner: owner
          extra_links:
          - class_ref:
              class_name: class_name
              module_path: module_path
          - class_ref:
              class_name: class_name
              module_path: module_path
          depends_on_past: true
          ui_color: ui_color
          pool_slots: 6.027456183070403
          pool: pool
          downstream_task_ids:
          - downstream_task_ids
          - downstream_task_ids
          sub_dag:
            dag_display_name: dag_display_name
            description: description
            owners:
            - owners
            - owners
            fileloc: fileloc
            has_task_concurrency_limits: true
            max_consecutive_failed_dag_runs: 2
            root_dag_id: root_dag_id
            last_pickled: 2000-01-23T04:56:07.000+00:00
            has_import_errors: true
            last_parsed_time: 2000-01-23T04:56:07.000+00:00
            next_dagrun_create_after: 2000-01-23T04:56:07.000+00:00
            dag_id: dag_id
            scheduler_lock: true
            default_view: default_view
            next_dagrun_data_interval_end: 2000-01-23T04:56:07.000+00:00
            next_dagrun_data_interval_start: 2000-01-23T04:56:07.000+00:00
            is_active: true
            last_expired: 2000-01-23T04:56:07.000+00:00
            max_active_runs: 5
            file_token: file_token
            max_active_tasks: 5
            pickle_id: pickle_id
            tags:
            - name: name
            - name: name
            timetable_description: timetable_description
            is_paused: true
            schedule_interval:
              seconds: 6
              __type: __type
              days: 0
              microseconds: 1
            is_subdag: true
            next_dagrun: 2000-01-23T04:56:07.000+00:00
          retries: 0.8008281904610115
          wait_for_downstream: true
          class_ref:
            class_name: class_name
            module_path: module_path
          queue: queue
          weight_rule: downstream
      properties:
        tasks:
          items:
            $ref: "#/components/schemas/Task"
          type: array
      type: object
    PluginCollectionItem:
      description: |
        A plugin Item.

        *New in version 2.1.0*
      example:
        macros:
        - macros
        - macros
        listeners:
        - listeners
        - listeners
        ti_deps:
        - ti_deps
        - ti_deps
        flask_blueprints:
        - flask_blueprints
        - flask_blueprints
        source: source
        global_operator_extra_links:
        - global_operator_extra_links
        - global_operator_extra_links
        appbuilder_menu_items:
        - "{}"
        - "{}"
        timetables:
        - timetables
        - timetables
        name: name
        executors:
        - executors
        - executors
        operator_extra_links:
        - operator_extra_links
        - operator_extra_links
        appbuilder_views:
        - "{}"
        - "{}"
        hooks:
        - hooks
        - hooks
      properties:
        name:
          description: The name of the plugin
          type: string
        hooks:
          description: The plugin hooks
          items:
            nullable: true
            type: string
          type: array
        executors:
          description: The plugin executors
          items:
            nullable: true
            type: string
          type: array
        macros:
          description: The plugin macros
          items:
            nullable: true
            type: string
          type: array
        flask_blueprints:
          description: The flask blueprints
          items:
            nullable: true
            type: string
          type: array
        appbuilder_views:
          description: The appuilder views
          items:
            nullable: true
            type: object
          type: array
        appbuilder_menu_items:
          description: The Flask Appbuilder menu items
          items:
            nullable: true
            type: object
          type: array
        global_operator_extra_links:
          description: The global operator extra links
          items:
            nullable: true
            type: string
          type: array
        operator_extra_links:
          description: Operator extra links
          items:
            nullable: true
            type: string
          type: array
        source:
          description: The plugin source
          nullable: true
          type: string
        ti_deps:
          description: The plugin task instance dependencies
          items:
            type: string
          type: array
        listeners:
          description: The plugin listeners
          items:
            type: string
          type: array
        timetables:
          description: The plugin timetables
          items:
            type: string
          type: array
      type: object
    PluginCollection:
      allOf:
      - properties:
          plugins:
            items:
              $ref: "#/components/schemas/PluginCollectionItem"
            type: array
        type: object
      - $ref: "#/components/schemas/CollectionInfo"
      description: |
        A collection of plugin.

        *New in version 2.1.0*
      example:
        plugins:
        - macros:
          - macros
          - macros
          listeners:
          - listeners
          - listeners
          ti_deps:
          - ti_deps
          - ti_deps
          flask_blueprints:
          - flask_blueprints
          - flask_blueprints
          source: source
          global_operator_extra_links:
          - global_operator_extra_links
          - global_operator_extra_links
          appbuilder_menu_items:
          - "{}"
          - "{}"
          timetables:
          - timetables
          - timetables
          name: name
          executors:
          - executors
          - executors
          operator_extra_links:
          - operator_extra_links
          - operator_extra_links
          appbuilder_views:
          - "{}"
          - "{}"
          hooks:
          - hooks
          - hooks
        - macros:
          - macros
          - macros
          listeners:
          - listeners
          - listeners
          ti_deps:
          - ti_deps
          - ti_deps
          flask_blueprints:
          - flask_blueprints
          - flask_blueprints
          source: source
          global_operator_extra_links:
          - global_operator_extra_links
          - global_operator_extra_links
          appbuilder_menu_items:
          - "{}"
          - "{}"
          timetables:
          - timetables
          - timetables
          name: name
          executors:
          - executors
          - executors
          operator_extra_links:
          - operator_extra_links
          - operator_extra_links
          appbuilder_views:
          - "{}"
          - "{}"
          hooks:
          - hooks
          - hooks
        total_entries: 0
      type: object
    Role:
      description: |
        a role item.

        *New in version 2.1.0*
      example:
        name: name
        actions:
        - resource:
            name: name
          action:
            name: name
        - resource:
            name: name
          action:
            name: name
      properties:
        name:
          description: |
            The name of the role

            *Changed in version 2.3.0*&#58; A minimum character length requirement ('minLength') is added.
          minLength: 1
          type: string
        actions:
          items:
            $ref: "#/components/schemas/ActionResource"
          type: array
      type: object
    RoleCollection:
      allOf:
      - properties:
          roles:
            items:
              $ref: "#/components/schemas/Role"
            type: array
        type: object
      - $ref: "#/components/schemas/CollectionInfo"
      description: |
        A collection of roles.

        *New in version 2.1.0*
      example:
        roles:
        - name: name
          actions:
          - resource:
              name: name
            action:
              name: name
          - resource:
              name: name
            action:
              name: name
        - name: name
          actions:
          - resource:
              name: name
            action:
              name: name
          - resource:
              name: name
            action:
              name: name
        total_entries: 0
      type: object
    Action:
      description: |
        An action Item.

        *New in version 2.1.0*
      example:
        name: name
      properties:
        name:
          description: The name of the permission "action"
          nullable: false
          type: string
      type: object
    ActionCollection:
      allOf:
      - properties:
          actions:
            items:
              $ref: "#/components/schemas/Action"
            type: array
        type: object
      - $ref: "#/components/schemas/CollectionInfo"
      description: |
        A collection of actions.

        *New in version 2.1.0*
      example:
        actions:
        - name: name
        - name: name
        total_entries: 0
      type: object
    Resource:
      description: |
        A resource on which permissions are granted.

        *New in version 2.1.0*
      example:
        name: name
      properties:
        name:
          description: The name of the resource
          nullable: false
          type: string
      type: object
    ActionResource:
      description: |
        The Action-Resource item.

        *New in version 2.1.0*
      example:
        resource:
          name: name
        action:
          name: name
      properties:
        action:
          $ref: "#/components/schemas/Action"
        resource:
          $ref: "#/components/schemas/Resource"
      type: object
    Dataset:
      description: |
        A dataset item.

        *New in version 2.4.0*
      example:
        consuming_dags:
        - updated_at: updated_at
          created_at: created_at
          dag_id: dag_id
        - updated_at: updated_at
          created_at: created_at
          dag_id: dag_id
        updated_at: updated_at
        extra: "{}"
        producing_tasks:
        - updated_at: updated_at
          created_at: created_at
          task_id: task_id
          dag_id: dag_id
        - updated_at: updated_at
          created_at: created_at
          task_id: task_id
          dag_id: dag_id
        created_at: created_at
        id: 0
        uri: uri
      properties:
        id:
          description: The dataset id
          type: integer
        uri:
          description: The dataset uri
          nullable: false
          type: string
        extra:
          description: The dataset extra
          nullable: true
          type: object
        created_at:
          description: The dataset creation time
          nullable: false
          type: string
        updated_at:
          description: The dataset update time
          nullable: false
          type: string
        consuming_dags:
          items:
            $ref: "#/components/schemas/DagScheduleDatasetReference"
          type: array
        producing_tasks:
          items:
            $ref: "#/components/schemas/TaskOutletDatasetReference"
          type: array
      type: object
    TaskOutletDatasetReference:
      description: |
        A datasets reference to an upstream task.

        *New in version 2.4.0*
      example:
        updated_at: updated_at
        created_at: created_at
        task_id: task_id
        dag_id: dag_id
      properties:
        dag_id:
          description: The DAG ID that updates the dataset.
          nullable: true
          type: string
        task_id:
          description: The task ID that updates the dataset.
          nullable: true
          type: string
        created_at:
          description: The dataset creation time
          nullable: false
          type: string
        updated_at:
          description: The dataset update time
          nullable: false
          type: string
      type: object
    DagScheduleDatasetReference:
      description: |
        A datasets reference to a downstream DAG.

        *New in version 2.4.0*
      example:
        updated_at: updated_at
        created_at: created_at
        dag_id: dag_id
      properties:
        dag_id:
          description: The DAG ID that depends on the dataset.
          nullable: true
          type: string
        created_at:
          description: The dataset reference creation time
          nullable: false
          type: string
        updated_at:
          description: The dataset reference update time
          nullable: false
          type: string
      type: object
    DatasetCollection:
      allOf:
      - properties:
          datasets:
            items:
              $ref: "#/components/schemas/Dataset"
            type: array
        type: object
      - $ref: "#/components/schemas/CollectionInfo"
      description: |
        A collection of datasets.

        *New in version 2.4.0*
      example:
        datasets:
        - consuming_dags:
          - updated_at: updated_at
            created_at: created_at
            dag_id: dag_id
          - updated_at: updated_at
            created_at: created_at
            dag_id: dag_id
          updated_at: updated_at
          extra: "{}"
          producing_tasks:
          - updated_at: updated_at
            created_at: created_at
            task_id: task_id
            dag_id: dag_id
          - updated_at: updated_at
            created_at: created_at
            task_id: task_id
            dag_id: dag_id
          created_at: created_at
          id: 0
          uri: uri
        - consuming_dags:
          - updated_at: updated_at
            created_at: created_at
            dag_id: dag_id
          - updated_at: updated_at
            created_at: created_at
            dag_id: dag_id
          updated_at: updated_at
          extra: "{}"
          producing_tasks:
          - updated_at: updated_at
            created_at: created_at
            task_id: task_id
            dag_id: dag_id
          - updated_at: updated_at
            created_at: created_at
            task_id: task_id
            dag_id: dag_id
          created_at: created_at
          id: 0
          uri: uri
        total_entries: 6
      type: object
    DatasetEvent:
      description: |
        A dataset event.

        *New in version 2.4.0*
      example:
        created_dagruns:
        - end_date: 2000-01-23T04:56:07.000+00:00
          data_interval_end: 2000-01-23T04:56:07.000+00:00
          run_id: run_id
          dag_id: dag_id
          logical_date: 2000-01-23T04:56:07.000+00:00
          data_interval_start: 2000-01-23T04:56:07.000+00:00
          state: queued
          start_date: 2000-01-23T04:56:07.000+00:00
        - end_date: 2000-01-23T04:56:07.000+00:00
          data_interval_end: 2000-01-23T04:56:07.000+00:00
          run_id: run_id
          dag_id: dag_id
          logical_date: 2000-01-23T04:56:07.000+00:00
          data_interval_start: 2000-01-23T04:56:07.000+00:00
          state: queued
          start_date: 2000-01-23T04:56:07.000+00:00
        source_dag_id: source_dag_id
        source_run_id: source_run_id
        dataset_uri: dataset_uri
        dataset_id: 0
        extra: "{}"
        source_task_id: source_task_id
        source_map_index: 6
        timestamp: timestamp
      properties:
        dataset_id:
          description: The dataset id
          type: integer
        dataset_uri:
          description: The URI of the dataset
          nullable: false
          type: string
        extra:
          description: The dataset event extra
          nullable: true
          type: object
        source_dag_id:
          description: The DAG ID that updated the dataset.
          nullable: true
          type: string
        source_task_id:
          description: The task ID that updated the dataset.
          nullable: true
          type: string
        source_run_id:
          description: The DAG run ID that updated the dataset.
          nullable: true
          type: string
        source_map_index:
          description: The task map index that updated the dataset.
          nullable: true
          type: integer
        created_dagruns:
          items:
            $ref: "#/components/schemas/BasicDAGRun"
          type: array
        timestamp:
          description: The dataset event creation time
          nullable: false
          type: string
      type: object
    CreateDatasetEvent:
      example:
        dataset_uri: dataset_uri
        extra: "{}"
      properties:
        dataset_uri:
          description: The URI of the dataset
          nullable: false
          type: string
        extra:
          description: The dataset event extra
          nullable: true
          type: object
      required:
      - dataset_uri
      type: object
    QueuedEvent:
      example:
        created_at: 2000-01-23T04:56:07.000+00:00
        dag_id: dag_id
        uri: uri
      properties:
        uri:
          description: The datata uri.
          type: string
        dag_id:
          description: The DAG ID.
          type: string
        created_at:
          description: The creation time of QueuedEvent
          format: date-time
          type: string
      type: object
    QueuedEventCollection:
      allOf:
      - properties:
          datasets:
            items:
              $ref: "#/components/schemas/QueuedEvent"
            type: array
        type: object
      - $ref: "#/components/schemas/CollectionInfo"
      description: |
        A collection of Dataset Dag Run Queues.

        *New in version 2.9.0*
      example:
        datasets:
        - created_at: 2000-01-23T04:56:07.000+00:00
          dag_id: dag_id
          uri: uri
        - created_at: 2000-01-23T04:56:07.000+00:00
          dag_id: dag_id
          uri: uri
        total_entries: 0
      type: object
    BasicDAGRun:
      example:
        end_date: 2000-01-23T04:56:07.000+00:00
        data_interval_end: 2000-01-23T04:56:07.000+00:00
        run_id: run_id
        dag_id: dag_id
        logical_date: 2000-01-23T04:56:07.000+00:00
        data_interval_start: 2000-01-23T04:56:07.000+00:00
        state: queued
        start_date: 2000-01-23T04:56:07.000+00:00
      properties:
        run_id:
          description: |
            Run ID.
          type: string
        dag_id:
          readOnly: true
          type: string
        logical_date:
          description: |
            The logical date (previously called execution date). This is the time or interval covered by
            this DAG run, according to the DAG definition.

            The value of this field can be set only when creating the object. If you try to modify the
            field of an existing object, the request fails with an BAD_REQUEST error.

            This together with DAG_ID are a unique key.

            *New in version 2.2.0*
          format: date-time
          type: string
        start_date:
          description: |
            The start time. The time when DAG run was actually created.

            *Changed in version 2.1.3*&#58; Field becomes nullable.
          format: date-time
          nullable: true
          readOnly: true
          type: string
        end_date:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        data_interval_start:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        data_interval_end:
          format: date-time
          nullable: true
          readOnly: true
          type: string
        state:
          $ref: "#/components/schemas/DagState"
      type: object
    DatasetEventCollection:
      allOf:
      - properties:
          dataset_events:
            items:
              $ref: "#/components/schemas/DatasetEvent"
            type: array
        type: object
      - $ref: "#/components/schemas/CollectionInfo"
      description: |
        A collection of dataset events.

        *New in version 2.4.0*
      example:
        dataset_events:
        - created_dagruns:
          - end_date: 2000-01-23T04:56:07.000+00:00
            data_interval_end: 2000-01-23T04:56:07.000+00:00
            run_id: run_id
            dag_id: dag_id
            logical_date: 2000-01-23T04:56:07.000+00:00
            data_interval_start: 2000-01-23T04:56:07.000+00:00
            state: queued
            start_date: 2000-01-23T04:56:07.000+00:00
          - end_date: 2000-01-23T04:56:07.000+00:00
            data_interval_end: 2000-01-23T04:56:07.000+00:00
            run_id: run_id
            dag_id: dag_id
            logical_date: 2000-01-23T04:56:07.000+00:00
            data_interval_start: 2000-01-23T04:56:07.000+00:00
            state: queued
            start_date: 2000-01-23T04:56:07.000+00:00
          source_dag_id: source_dag_id
          source_run_id: source_run_id
          dataset_uri: dataset_uri
          dataset_id: 0
          extra: "{}"
          source_task_id: source_task_id
          source_map_index: 6
          timestamp: timestamp
        - created_dagruns:
          - end_date: 2000-01-23T04:56:07.000+00:00
            data_interval_end: 2000-01-23T04:56:07.000+00:00
            run_id: run_id
            dag_id: dag_id
            logical_date: 2000-01-23T04:56:07.000+00:00
            data_interval_start: 2000-01-23T04:56:07.000+00:00
            state: queued
            start_date: 2000-01-23T04:56:07.000+00:00
          - end_date: 2000-01-23T04:56:07.000+00:00
            data_interval_end: 2000-01-23T04:56:07.000+00:00
            run_id: run_id
            dag_id: dag_id
            logical_date: 2000-01-23T04:56:07.000+00:00
            data_interval_start: 2000-01-23T04:56:07.000+00:00
            state: queued
            start_date: 2000-01-23T04:56:07.000+00:00
          source_dag_id: source_dag_id
          source_run_id: source_run_id
          dataset_uri: dataset_uri
          dataset_id: 0
          extra: "{}"
          source_task_id: source_task_id
          source_map_index: 6
          timestamp: timestamp
        total_entries: 1
      type: object
    ConfigOption:
      description: The option of configuration.
      example:
        value: value
        key: key
      properties:
        key:
          readOnly: true
          type: string
        value:
          readOnly: true
          type: string
      type: object
    ConfigSection:
      description: The section of configuration.
      example:
        name: name
        options:
        - value: value
          key: key
        - value: value
          key: key
      properties:
        name:
          readOnly: true
          type: string
        options:
          items:
            $ref: "#/components/schemas/ConfigOption"
          type: array
      type: object
    Config:
      description: The configuration.
      example:
        sections:
        - name: name
          options:
          - value: value
            key: key
          - value: value
            key: key
        - name: name
          options:
          - value: value
            key: key
          - value: value
            key: key
      properties:
        sections:
          items:
            $ref: "#/components/schemas/ConfigSection"
          type: array
      type: object
    VersionInfo:
      description: Version information.
      example:
        git_version: git_version
        version: version
      properties:
        version:
          description: The version of Airflow
          type: string
        git_version:
          description: The git version (including git commit hash)
          nullable: true
          type: string
      type: object
    ClearDagRun:
      example:
        dry_run: true
      properties:
        dry_run:
          default: true
          description: |
            If set, don't actually run this operation. The response will contain a list of task instances
            planned to be cleaned, but not modified in any way.
          type: boolean
      type: object
    ClearTaskInstances:
      example:
        end_date: end_date
        include_future: false
        include_past: false
        reset_dag_runs: true
        include_parentdag: true
        include_subdags: true
        task_ids:
        - task_ids
        - task_ids
        include_downstream: false
        only_running: false
        dag_run_id: dag_run_id
        include_upstream: false
        dry_run: true
        only_failed: true
        start_date: start_date
      properties:
        dry_run:
          default: true
          description: |
            If set, don't actually run this operation. The response will contain a list of task instances
            planned to be cleaned, but not modified in any way.
          type: boolean
        task_ids:
          description: |
            A list of task ids to clear.

            *New in version 2.1.0*
          items:
            type: string
          minItems: 1
          type: array
        start_date:
          description: The minimum execution date to clear.
          format: datetime
          type: string
        end_date:
          description: The maximum execution date to clear.
          format: datetime
          type: string
        only_failed:
          default: true
          description: Only clear failed tasks.
          type: boolean
        only_running:
          default: false
          description: Only clear running tasks.
          type: boolean
        include_subdags:
          description: Clear tasks in subdags and clear external tasks indicated by
            ExternalTaskMarker.
          type: boolean
        include_parentdag:
          description: Clear tasks in the parent dag of the subdag.
          type: boolean
        reset_dag_runs:
          description: Set state of DAG runs to RUNNING.
          type: boolean
        dag_run_id:
          description: The DagRun ID for this task instance
          nullable: true
          type: string
        include_upstream:
          default: false
          description: "If set to true, upstream tasks are also affected."
          type: boolean
        include_downstream:
          default: false
          description: "If set to true, downstream tasks are also affected."
          type: boolean
        include_future:
          default: false
          description: "If set to True, also tasks from future DAG Runs are affected."
          type: boolean
        include_past:
          default: false
          description: "If set to True, also tasks from past DAG Runs are affected."
          type: boolean
      type: object
    UpdateTaskInstancesState:
      example:
        include_future: true
        include_past: true
        execution_date: execution_date
        dag_run_id: dag_run_id
        include_upstream: true
        new_state: success
        dry_run: true
        task_id: task_id
        include_downstream: true
      properties:
        dry_run:
          default: true
          description: |
            If set, don't actually run this operation. The response will contain a list of task instances
            planned to be affected, but won't be modified in any way.
          type: boolean
        task_id:
          description: The task ID.
          type: string
        execution_date:
          description: The execution date. Either set this or dag_run_id but not both.
          format: datetime
          type: string
        dag_run_id:
          description: |
            The task instance's DAG run ID. Either set this or execution_date but not both.

            *New in version 2.3.0*
          type: string
        include_upstream:
          description: "If set to true, upstream tasks are also affected."
          type: boolean
        include_downstream:
          description: "If set to true, downstream tasks are also affected."
          type: boolean
        include_future:
          description: "If set to True, also tasks from future DAG Runs are affected."
          type: boolean
        include_past:
          description: "If set to True, also tasks from past DAG Runs are affected."
          type: boolean
        new_state:
          $ref: "#/components/schemas/UpdateTaskState"
      type: object
    UpdateTaskInstance:
      example:
        new_state: success
        dry_run: true
      properties:
        dry_run:
          default: true
          description: |
            If set, don't actually run this operation. The response will contain the task instance
            planned to be affected, but won't be modified in any way.
          type: boolean
        new_state:
          $ref: "#/components/schemas/UpdateTaskState"
      type: object
    SetTaskInstanceNote:
      example:
        note: note
      properties:
        note:
          description: The custom note to set for this Task Instance.
          type: string
      required:
      - note
      type: object
    ListDagRunsForm:
      example:
        start_date_gte: 2000-01-23T04:56:07.000+00:00
        end_date_lte: 2000-01-23T04:56:07.000+00:00
        execution_date_gte: 2000-01-23T04:56:07.000+00:00
        page_limit: 1
        execution_date_lte: 2000-01-23T04:56:07.000+00:00
        order_by: order_by
        page_offset: 0
        end_date_gte: 2000-01-23T04:56:07.000+00:00
        start_date_lte: 2000-01-23T04:56:07.000+00:00
        dag_ids:
        - dag_ids
        - dag_ids
        states:
        - states
        - states
      properties:
        order_by:
          description: |
            The name of the field to order the results by. Prefix a field name
            with `-` to reverse the sort order.

            *New in version 2.1.0*
          type: string
        page_offset:
          description: The number of items to skip before starting to collect the
            result set.
          minimum: 0
          type: integer
        page_limit:
          default: 100
          description: The numbers of items to return.
          minimum: 1
          type: integer
        dag_ids:
          description: |-
            Return objects with specific DAG IDs.
            The value can be repeated to retrieve multiple matching values (OR condition).
          items:
            type: string
          type: array
        states:
          description: |-
            Return objects with specific states.
            The value can be repeated to retrieve multiple matching values (OR condition).
          items:
            type: string
          type: array
        execution_date_gte:
          description: |
            Returns objects greater or equal to the specified date.

            This can be combined with execution_date_lte key to receive only the selected period.
          format: date-time
          type: string
        execution_date_lte:
          description: |
            Returns objects less than or equal to the specified date.

            This can be combined with execution_date_gte key to receive only the selected period.
          format: date-time
          type: string
        start_date_gte:
          description: |
            Returns objects greater or equal the specified date.

            This can be combined with start_date_lte key to receive only the selected period.
          format: date-time
          type: string
        start_date_lte:
          description: |
            Returns objects less or equal the specified date.

            This can be combined with start_date_gte parameter to receive only the selected period
          format: date-time
          type: string
        end_date_gte:
          description: |
            Returns objects greater or equal the specified date.

            This can be combined with end_date_lte parameter to receive only the selected period.
          format: date-time
          type: string
        end_date_lte:
          description: |
            Returns objects less than or equal to the specified date.

            This can be combined with end_date_gte parameter to receive only the selected period.
          format: date-time
          type: string
      type: object
    ListTaskInstanceForm:
      example:
        end_date_lte: 2000-01-23T04:56:07.000+00:00
        dag_run_ids:
        - dag_run_ids
        - dag_run_ids
        execution_date_gte: 2000-01-23T04:56:07.000+00:00
        duration_gte: 1.4658129805029452
        pool:
        - pool
        - pool
        page_offset: 0
        task_ids:
        - task_ids
        - task_ids
        dag_ids:
        - dag_ids
        - dag_ids
        start_date_gte: 2000-01-23T04:56:07.000+00:00
        page_limit: 1
        executor:
        - executor
        - executor
        execution_date_lte: 2000-01-23T04:56:07.000+00:00
        duration_lte: 5.962133916683182
        end_date_gte: 2000-01-23T04:56:07.000+00:00
        state:
        - null
        - null
        start_date_lte: 2000-01-23T04:56:07.000+00:00
        queue:
        - queue
        - queue
      properties:
        page_offset:
          description: The number of items to skip before starting to collect the
            result set.
          minimum: 0
          type: integer
        page_limit:
          default: 100
          description: The numbers of items to return.
          minimum: 1
          type: integer
        dag_ids:
          description: |-
            Return objects with specific DAG IDs.
            The value can be repeated to retrieve multiple matching values (OR condition).
          items:
            type: string
          type: array
        dag_run_ids:
          description: |-
            Return objects with specific DAG Run IDs.
            The value can be repeated to retrieve multiple matching values (OR condition).
            *New in version 2.7.1*
          items:
            type: string
          type: array
        task_ids:
          description: |-
            Return objects with specific task IDs.
            The value can be repeated to retrieve multiple matching values (OR condition).
            *New in version 2.7.1*
          items:
            type: string
          type: array
        execution_date_gte:
          description: |
            Returns objects greater or equal to the specified date.

            This can be combined with execution_date_lte parameter to receive only the selected period.
          format: date-time
          type: string
        execution_date_lte:
          description: |
            Returns objects less than or equal to the specified date.

            This can be combined with execution_date_gte parameter to receive only the selected period.
          format: date-time
          type: string
        start_date_gte:
          description: |
            Returns objects greater or equal the specified date.

            This can be combined with start_date_lte parameter to receive only the selected period.
          format: date-time
          type: string
        start_date_lte:
          description: |
            Returns objects less or equal the specified date.

            This can be combined with start_date_gte parameter to receive only the selected period.
          format: date-time
          type: string
        end_date_gte:
          description: |
            Returns objects greater or equal the specified date.

            This can be combined with start_date_lte parameter to receive only the selected period.
          format: date-time
          type: string
        end_date_lte:
          description: |
            Returns objects less than or equal to the specified date.

            This can be combined with start_date_gte parameter to receive only the selected period.
          format: date-time
          type: string
        duration_gte:
          description: |
            Returns objects greater than or equal to the specified values.

            This can be combined with duration_lte parameter to receive only the selected period.
          type: number
        duration_lte:
          description: |
            Returns objects less than or equal to the specified values.

            This can be combined with duration_gte parameter to receive only the selected range.
          type: number
        state:
          description: The value can be repeated to retrieve multiple matching values
            (OR condition).
          items:
            $ref: "#/components/schemas/TaskState"
          type: array
        pool:
          description: The value can be repeated to retrieve multiple matching values
            (OR condition).
          items:
            type: string
          type: array
        queue:
          description: The value can be repeated to retrieve multiple matching values
            (OR condition).
          items:
            type: string
          type: array
        executor:
          description: The value can be repeated to retrieve multiple matching values
            (OR condition).
          items:
            type: string
          type: array
      type: object
    ScheduleInterval:
      anyOf:
      - $ref: "#/components/schemas/TimeDelta"
      - $ref: "#/components/schemas/RelativeDelta"
      - $ref: "#/components/schemas/CronExpression"
      description: |
        Schedule interval. Defines how often DAG runs, this object gets added to your latest task instance's
        execution_date to figure out the next schedule.
      discriminator:
        propertyName: __type
      nullable: true
      readOnly: true
    TimeDelta:
      description: Time delta
      example:
        seconds: 6
        __type: __type
        days: 0
        microseconds: 1
      nullable: true
      properties:
        __type:
          type: string
        days:
          type: integer
        seconds:
          type: integer
        microseconds:
          type: integer
      required:
      - __type
      - days
      - microseconds
      - seconds
      type: object
    RelativeDelta:
      description: Relative delta
      properties:
        __type:
          type: string
        years:
          type: integer
        months:
          type: integer
        days:
          type: integer
        leapdays:
          type: integer
        hours:
          type: integer
        minutes:
          type: integer
        seconds:
          type: integer
        microseconds:
          type: integer
        year:
          type: integer
        month:
          type: integer
        day:
          type: integer
        hour:
          type: integer
        minute:
          type: integer
        second:
          type: integer
        microsecond:
          type: integer
      required:
      - __type
      - day
      - days
      - hour
      - hours
      - leapdays
      - microsecond
      - microseconds
      - minute
      - minutes
      - month
      - months
      - second
      - seconds
      - year
      - years
      type: object
    CronExpression:
      description: Cron expression
      nullable: true
      properties:
        __type:
          type: string
        value:
          type: string
      required:
      - __type
      - value
      type: object
    Timezone:
      type: string
    Tag:
      description: Tag
      example:
        name: name
      properties:
        name:
          type: string
      type: object
    Color:
      description: Color in hexadecimal notation.
      pattern: "^#[a-fA-F0-9]{3,6}$"
      type: string
    ClassReference:
      description: Class reference
      example:
        class_name: class_name
        module_path: module_path
      properties:
        module_path:
          readOnly: true
          type: string
        class_name:
          readOnly: true
          type: string
      type: object
    Error:
      description: |
        [RFC7807](https://tools.ietf.org/html/rfc7807) compliant response.
      example:
        instance: instance
        detail: detail
        type: type
        title: title
        status: 1.4658129805029452
      properties:
        type:
          description: |
            A URI reference [RFC3986] that identifies the problem type. This specification
            encourages that, when dereferenced, it provide human-readable documentation for
            the problem type.
          type: string
        title:
          description: "A short, human-readable summary of the problem type."
          type: string
        status:
          description: The HTTP status code generated by the API server for this occurrence
            of the problem.
          type: number
        detail:
          description: A human-readable explanation specific to this occurrence of
            the problem.
          type: string
        instance:
          description: |
            A URI reference that identifies the specific occurrence of the problem. It may or may
            not yield further information if dereferenced.
          type: string
      required:
      - status
      - title
      - type
      type: object
    CollectionInfo:
      description: Metadata about collection.
      properties:
        total_entries:
          description: |
            Count of total objects in the current result set before pagination parameters
            (limit, offset) are applied.
          type: integer
      type: object
    TaskState:
      description: |
        Task state.

        *Changed in version 2.0.2*&#58; 'removed' is added as a possible value.

        *Changed in version 2.2.0*&#58; 'deferred' is added as a possible value.

        *Changed in version 2.4.0*&#58; 'sensing' state has been removed.
        *Changed in version 2.4.2*&#58; 'restarting' is added as a possible value

        *Changed in version 2.7.0*&#58; Field becomes nullable and null primitive is added as a possible value.
        *Changed in version 2.7.0*&#58; 'none' state is deprecated in favor of null.
      enum:
      - null
      - success
      - running
      - failed
      - upstream_failed
      - skipped
      - up_for_retry
      - up_for_reschedule
      - queued
      - none
      - scheduled
      - deferred
      - removed
      - restarting
      nullable: true
      type: string
    UpdateTaskState:
      description: |
        Expected new state. Only a subset of TaskState are available.

        Other states are managed directly by the scheduler or the workers and cannot be updated manually through the REST API.
      enum:
      - success
      - failed
      - skipped
      type: string
    DagState:
      description: |
        DAG State.

        *Changed in version 2.1.3*&#58; 'queued' is added as a possible value.
      enum:
      - queued
      - running
      - success
      - failed
      readOnly: true
      type: string
    TriggerRule:
      description: |
        Trigger rule.

        *Changed in version 2.2.0*&#58; 'none_failed_min_one_success' is added as a possible value. Deprecated 'dummy' and 'always' is added as a possible value

        *Changed in version 2.3.0*&#58; 'all_skipped' is added as a possible value.

        *Changed in version 2.5.0*&#58; 'one_done' is added as a possible value.

        *Changed in version 2.7.0*&#58; 'all_done_setup_success' is added as a possible value.
      enum:
      - all_success
      - all_failed
      - all_done
      - all_done_setup_success
      - one_success
      - one_failed
      - one_done
      - none_failed
      - none_skipped
      - none_failed_or_skipped
      - none_failed_min_one_success
      - dummy
      - all_skipped
      - always
      type: string
    WeightRule:
      description: Weight rule.
      enum:
      - downstream
      - upstream
      - absolute
      type: string
    HealthStatus:
      description: Health status
      enum:
      - healthy
      - unhealthy
      nullable: true
      type: string
    clear_dag_run_200_response:
      anyOf:
      - $ref: "#/components/schemas/DAGRun"
      - $ref: "#/components/schemas/TaskInstanceCollection"
    get_providers_200_response:
      allOf:
      - $ref: "#/components/schemas/ProviderCollection"
      - $ref: "#/components/schemas/CollectionInfo"
      example:
        providers:
        - package_name: package_name
          description: description
          version: version
        - package_name: package_name
          description: description
          version: version
        total_entries: 0
    get_log_200_response:
      example:
        continuation_token: continuation_token
        content: content
      properties:
        continuation_token:
          type: string
        content:
          type: string
      type: object
    get_dag_source_200_response:
      example:
        content: content
      properties:
        content:
          type: string
      type: object
    UserCollectionItem_roles_inner:
      example:
        name: name
      nullable: true
      properties:
        name:
          type: string
      type: object
    DAGDetail_allOf_dataset_expression:
      description: Nested dataset any/all conditions
      nullable: true
      type: object
    DAGDetail_allOf_params:
      description: |
        User-specified DAG params.

        *New in version 2.0.1*
      readOnly: true
      type: object
    Task_extra_links_inner:
      example:
        class_ref:
          class_name: class_name
          module_path: module_path
      properties:
        class_ref:
          $ref: "#/components/schemas/ClassReference"
      type: object
  securitySchemes:
    Basic:
      scheme: basic
      type: http
    GoogleOpenId:
      openIdConnectUrl: https://accounts.google.com/.well-known/openid-configuration
      type: openIdConnect
    Kerberos:
      scheme: negotiate
      type: http

